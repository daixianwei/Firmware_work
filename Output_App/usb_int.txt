; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output_App\usb_int.o --asm_dir=..\Output_App\ --list_dir=..\Output_App\ --depend=..\Output_App\usb_int.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I.\System\CM3 -I.\System\FWlib\inc -I.\System\Startup -I.\ISR -I.\Main -I.\Management\DisplayDriver -I.\Management\HumanInput -I.\Management\Interface -I.\Management\RotationMotor -I.\Management\ScanMotor -I.\Management\Common_CRC -I.\Management\QRCode -I.\Management\SystemManage_RTC -I.\Management\SignalProcess_Sample -I.\USB -I.\USB\comm -I.\USB\lib -I.\USB\src -I.\USB\USB_Communication -ID:\Keil4.0\ARM\RV31\Inc -ID:\Keil4.0\ARM\CMSIS\Include -ID:\Keil4.0\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL -W --omf_browse=..\Output_App\usb_int.crf USB\lib\usb_int.c]
                          THUMB

                          AREA ||i.CTR_HP||, CODE, READONLY, ALIGN=2

                  CTR_HP PROC
;;;160    *******************************************************************************/
;;;161    void CTR_HP(void)
000000  b510              PUSH     {r4,lr}
;;;162    {
;;;163      uint32_t wEPVal = 0;
000002  2400              MOVS     r4,#0
;;;164    
;;;165      while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000004  e044              B        |L1.144|
                  |L1.6|
;;;166      {
;;;167        _SetISTR((uint16_t)CLR_CTR); /* clear CTR flag */
000006  f64770ff          MOV      r0,#0x7fff
00000a  4926              LDR      r1,|L1.164|
00000c  6008              STR      r0,[r1,#0]
;;;168        /* extract highest priority endpoint number */
;;;169        EPindex = (uint8_t)(wIstr & ISTR_EP_ID);
00000e  4826              LDR      r0,|L1.168|
000010  8800              LDRH     r0,[r0,#0]  ; wIstr
000012  f000000f          AND      r0,r0,#0xf
000016  4925              LDR      r1,|L1.172|
000018  7008              STRB     r0,[r1,#0]
;;;170        /* process related endpoint register */
;;;171        wEPVal = _GetENDPOINT(EPindex);
00001a  4608              MOV      r0,r1
00001c  7800              LDRB     r0,[r0,#0]  ; EPindex
00001e  4921              LDR      r1,|L1.164|
000020  3944              SUBS     r1,r1,#0x44
000022  f8510020          LDR      r0,[r1,r0,LSL #2]
000026  b284              UXTH     r4,r0
;;;172        if ((wEPVal & EP_CTR_RX) != 0)
000028  f4144f00          TST      r4,#0x8000
00002c  d016              BEQ      |L1.92|
;;;173        {
;;;174          /* clear int flag */
;;;175          _ClearEP_CTR_RX(EPindex);
00002e  481f              LDR      r0,|L1.172|
000030  7800              LDRB     r0,[r0,#0]  ; EPindex
000032  f8510020          LDR      r0,[r1,r0,LSL #2]
000036  f3c0000e          UBFX     r0,r0,#0,#15
00003a  f648718f          MOV      r1,#0x8f8f
00003e  4008              ANDS     r0,r0,r1
000040  491a              LDR      r1,|L1.172|
000042  7809              LDRB     r1,[r1,#0]  ; EPindex
000044  4a17              LDR      r2,|L1.164|
000046  3a44              SUBS     r2,r2,#0x44
000048  f8420021          STR      r0,[r2,r1,LSL #2]
;;;176    
;;;177          /* call OUT service function */
;;;178          (*pEpInt_OUT[EPindex-1])();
00004c  4917              LDR      r1,|L1.172|
00004e  7809              LDRB     r1,[r1,#0]  ; EPindex
000050  1e49              SUBS     r1,r1,#1
000052  4a17              LDR      r2,|L1.176|
000054  f8520021          LDR      r0,[r2,r1,LSL #2]
000058  4780              BLX      r0
00005a  e019              B        |L1.144|
                  |L1.92|
;;;179    
;;;180        } /* if((wEPVal & EP_CTR_RX) */
;;;181        else if ((wEPVal & EP_CTR_TX) != 0)
00005c  f0140f80          TST      r4,#0x80
000060  d016              BEQ      |L1.144|
;;;182        {
;;;183          /* clear int flag */
;;;184          _ClearEP_CTR_TX(EPindex);
000062  4812              LDR      r0,|L1.172|
000064  7800              LDRB     r0,[r0,#0]  ; EPindex
000066  490f              LDR      r1,|L1.164|
000068  3944              SUBS     r1,r1,#0x44
00006a  f8510020          LDR      r0,[r1,r0,LSL #2]
00006e  b280              UXTH     r0,r0
000070  f648710f          MOV      r1,#0x8f0f
000074  4008              ANDS     r0,r0,r1
000076  490d              LDR      r1,|L1.172|
000078  7809              LDRB     r1,[r1,#0]  ; EPindex
00007a  4a0a              LDR      r2,|L1.164|
00007c  3a44              SUBS     r2,r2,#0x44
00007e  f8420021          STR      r0,[r2,r1,LSL #2]
;;;185    
;;;186          /* call IN service function */
;;;187          (*pEpInt_IN[EPindex-1])();
000082  490a              LDR      r1,|L1.172|
000084  7809              LDRB     r1,[r1,#0]  ; EPindex
000086  1e49              SUBS     r1,r1,#1
000088  4a0a              LDR      r2,|L1.180|
00008a  f8520021          LDR      r0,[r2,r1,LSL #2]
00008e  4780              BLX      r0
                  |L1.144|
000090  4804              LDR      r0,|L1.164|
000092  6800              LDR      r0,[r0,#0]            ;165
000094  b280              UXTH     r0,r0                 ;165
000096  4904              LDR      r1,|L1.168|
000098  8008              STRH     r0,[r1,#0]            ;165
00009a  f4104f00          TST      r0,#0x8000            ;165
00009e  d1b2              BNE      |L1.6|
;;;188    
;;;189    
;;;190        } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;191    
;;;192      }/* while(...) */
;;;193    }
0000a0  bd10              POP      {r4,pc}
;;;194    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L1.164|
                          DCD      0x40005c44
                  |L1.168|
                          DCD      wIstr
                  |L1.172|
                          DCD      EPindex
                  |L1.176|
                          DCD      pEpInt_OUT
                  |L1.180|
                          DCD      pEpInt_IN

                          AREA ||i.CTR_LP||, CODE, READONLY, ALIGN=2

                  CTR_LP PROC
;;;52     *******************************************************************************/
;;;53     void CTR_LP(void)
000000  b510              PUSH     {r4,lr}
;;;54     {
;;;55       __IO uint16_t wEPVal = 0;
000002  2400              MOVS     r4,#0
;;;56       /* stay in loop while pending interrupts */
;;;57       while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000004  e111              B        |L2.554|
                  |L2.6|
;;;58       {
;;;59         /* extract highest priority endpoint number */
;;;60         EPindex = (uint8_t)(wIstr & ISTR_EP_ID);
000006  488f              LDR      r0,|L2.580|
000008  8800              LDRH     r0,[r0,#0]  ; wIstr
00000a  f000000f          AND      r0,r0,#0xf
00000e  498e              LDR      r1,|L2.584|
000010  7008              STRB     r0,[r1,#0]
;;;61         if (EPindex == 0)
000012  4608              MOV      r0,r1
000014  7800              LDRB     r0,[r0,#0]  ; EPindex
000016  2800              CMP      r0,#0
000018  d17e              BNE      |L2.280|
;;;62         {
;;;63           /* Decode and service control endpoint interrupt */
;;;64           /* calling related service routine */
;;;65           /* (Setup0_Process, In0_Process, Out0_Process) */
;;;66     
;;;67           /* save RX & TX status */
;;;68           /* and set both to NAK */
;;;69           
;;;70     	    SaveRState = _GetENDPOINT(ENDP0);
00001a  488c              LDR      r0,|L2.588|
00001c  6800              LDR      r0,[r0,#0]
00001e  498c              LDR      r1,|L2.592|
000020  8008              STRH     r0,[r1,#0]
;;;71     	    SaveTState = SaveRState & EPTX_STAT;
000022  4608              MOV      r0,r1
000024  8800              LDRH     r0,[r0,#0]  ; SaveRState
000026  f0000030          AND      r0,r0,#0x30
00002a  498a              LDR      r1,|L2.596|
00002c  8008              STRH     r0,[r1,#0]
;;;72     	    SaveRState &=  EPRX_STAT;	
00002e  4888              LDR      r0,|L2.592|
000030  8800              LDRH     r0,[r0,#0]  ; SaveRState
000032  f4005040          AND      r0,r0,#0x3000
000036  4986              LDR      r1,|L2.592|
000038  8008              STRH     r0,[r1,#0]
;;;73     
;;;74     	    _SetEPRxTxStatus(ENDP0,EP_RX_NAK,EP_TX_NAK);
00003a  4984              LDR      r1,|L2.588|
00003c  6809              LDR      r1,[r1,#0]
00003e  b289              UXTH     r1,r1
000040  f64b72bf          MOV      r2,#0xbfbf
000044  ea010002          AND      r0,r1,r2
000048  f4805000          EOR      r0,r0,#0x2000
00004c  f0800020          EOR      r0,r0,#0x20
000050  f4404100          ORR      r1,r0,#0x8000
000054  f0410180          ORR      r1,r1,#0x80
000058  4a7c              LDR      r2,|L2.588|
00005a  6011              STR      r1,[r2,#0]
;;;75     
;;;76           /* DIR bit = origin of the interrupt */
;;;77     
;;;78           if ((wIstr & ISTR_DIR) == 0)
00005c  4879              LDR      r0,|L2.580|
00005e  8800              LDRH     r0,[r0,#0]  ; wIstr
000060  f0100f10          TST      r0,#0x10
000064  d134              BNE      |L2.208|
;;;79           {
;;;80             /* DIR = 0 */
;;;81     
;;;82             /* DIR = 0      => IN  int */
;;;83             /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
;;;84     
;;;85             _ClearEP_CTR_TX(ENDP0);
000066  4610              MOV      r0,r2
000068  6800              LDR      r0,[r0,#0]
00006a  b280              UXTH     r0,r0
00006c  f648710f          MOV      r1,#0x8f0f
000070  4008              ANDS     r0,r0,r1
000072  4611              MOV      r1,r2
000074  6008              STR      r0,[r1,#0]
;;;86             In0_Process();
000076  f7fffffe          BL       In0_Process
;;;87     
;;;88                /* before terminate set Tx & Rx status */
;;;89     
;;;90                 _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
00007a  4974              LDR      r1,|L2.588|
00007c  6809              LDR      r1,[r1,#0]
00007e  b289              UXTH     r1,r1
000080  f64b72bf          MOV      r2,#0xbfbf
000084  ea010002          AND      r0,r1,r2
000088  4971              LDR      r1,|L2.592|
00008a  8809              LDRH     r1,[r1,#0]  ; SaveRState
00008c  f4115f80          TST      r1,#0x1000
000090  d001              BEQ      |L2.150|
000092  f4805080          EOR      r0,r0,#0x1000
                  |L2.150|
000096  496e              LDR      r1,|L2.592|
000098  8809              LDRH     r1,[r1,#0]  ; SaveRState
00009a  f4115f00          TST      r1,#0x2000
00009e  d001              BEQ      |L2.164|
0000a0  f4805000          EOR      r0,r0,#0x2000
                  |L2.164|
0000a4  496b              LDR      r1,|L2.596|
0000a6  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000a8  f0110f10          TST      r1,#0x10
0000ac  d001              BEQ      |L2.178|
0000ae  f0800010          EOR      r0,r0,#0x10
                  |L2.178|
0000b2  4968              LDR      r1,|L2.596|
0000b4  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000b6  f0110f20          TST      r1,#0x20
0000ba  d001              BEQ      |L2.192|
0000bc  f0800020          EOR      r0,r0,#0x20
                  |L2.192|
0000c0  b281              UXTH     r1,r0
0000c2  f4414100          ORR      r1,r1,#0x8000
0000c6  f0410180          ORR      r1,r1,#0x80
0000ca  4a60              LDR      r2,|L2.588|
0000cc  6011              STR      r1,[r2,#0]
                  |L2.206|
;;;91     		  return;
;;;92           }
;;;93           else
;;;94           {
;;;95             /* DIR = 1 */
;;;96     
;;;97             /* DIR = 1 & CTR_RX       => SETUP or OUT int */
;;;98             /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
;;;99     
;;;100            wEPVal = _GetENDPOINT(ENDP0);
;;;101            
;;;102            if ((wEPVal &EP_SETUP) != 0)
;;;103            {
;;;104              _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
;;;105              Setup0_Process();
;;;106              /* before terminate set Tx & Rx status */
;;;107    
;;;108    		      _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
;;;109              return;
;;;110            }
;;;111    
;;;112            else if ((wEPVal & EP_CTR_RX) != 0)
;;;113            {
;;;114              _ClearEP_CTR_RX(ENDP0);
;;;115              Out0_Process();
;;;116              /* before terminate set Tx & Rx status */
;;;117         
;;;118    		     _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
;;;119              return;
;;;120            }
;;;121          }
;;;122        }/* if(EPindex == 0) */
;;;123        else
;;;124        {
;;;125          /* Decode and service non control endpoints interrupt  */
;;;126    
;;;127          /* process related endpoint register */
;;;128          wEPVal = _GetENDPOINT(EPindex);
;;;129          if ((wEPVal & EP_CTR_RX) != 0)
;;;130          {
;;;131            /* clear int flag */
;;;132            _ClearEP_CTR_RX(EPindex);
;;;133    
;;;134            /* call OUT service function */
;;;135            (*pEpInt_OUT[EPindex-1])();
;;;136    
;;;137          } /* if((wEPVal & EP_CTR_RX) */
;;;138    
;;;139          if ((wEPVal & EP_CTR_TX) != 0)
;;;140          {
;;;141            /* clear int flag */
;;;142            _ClearEP_CTR_TX(EPindex);
;;;143    
;;;144            /* call IN service function */
;;;145            (*pEpInt_IN[EPindex-1])();
;;;146          } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;147    
;;;148        }/* if(EPindex == 0) else */
;;;149    
;;;150      }/* while(...) */
;;;151    }
0000ce  bd10              POP      {r4,pc}
                  |L2.208|
0000d0  485e              LDR      r0,|L2.588|
0000d2  6800              LDR      r0,[r0,#0]            ;100
0000d4  b284              UXTH     r4,r0                 ;100
0000d6  f4146f00          TST      r4,#0x800             ;102
0000da  d037              BEQ      |L2.332|
0000dc  485b              LDR      r0,|L2.588|
0000de  6800              LDR      r0,[r0,#0]            ;104
0000e0  f3c0000e          UBFX     r0,r0,#0,#15          ;104
0000e4  f648718f          MOV      r1,#0x8f8f            ;104
0000e8  4008              ANDS     r0,r0,r1              ;104
0000ea  4958              LDR      r1,|L2.588|
0000ec  6008              STR      r0,[r1,#0]            ;104
0000ee  f7fffffe          BL       Setup0_Process
0000f2  4956              LDR      r1,|L2.588|
0000f4  6809              LDR      r1,[r1,#0]            ;108
0000f6  b289              UXTH     r1,r1                 ;108
0000f8  f64b72bf          MOV      r2,#0xbfbf            ;108
0000fc  ea010002          AND      r0,r1,r2              ;108
000100  4953              LDR      r1,|L2.592|
000102  8809              LDRH     r1,[r1,#0]            ;108  ; SaveRState
000104  f4115f80          TST      r1,#0x1000            ;108
000108  d001              BEQ      |L2.270|
00010a  f4805080          EOR      r0,r0,#0x1000         ;108
                  |L2.270|
00010e  4950              LDR      r1,|L2.592|
000110  8809              LDRH     r1,[r1,#0]            ;108  ; SaveRState
000112  f4115f00          TST      r1,#0x2000            ;108
000116  e000              B        |L2.282|
                  |L2.280|
000118  e051              B        |L2.446|
                  |L2.282|
00011a  d001              BEQ      |L2.288|
00011c  f4805000          EOR      r0,r0,#0x2000         ;108
                  |L2.288|
000120  494c              LDR      r1,|L2.596|
000122  8809              LDRH     r1,[r1,#0]            ;108  ; SaveTState
000124  f0110f10          TST      r1,#0x10              ;108
000128  d001              BEQ      |L2.302|
00012a  f0800010          EOR      r0,r0,#0x10           ;108
                  |L2.302|
00012e  4949              LDR      r1,|L2.596|
000130  8809              LDRH     r1,[r1,#0]            ;108  ; SaveTState
000132  f0110f20          TST      r1,#0x20              ;108
000136  d001              BEQ      |L2.316|
000138  f0800020          EOR      r0,r0,#0x20           ;108
                  |L2.316|
00013c  b281              UXTH     r1,r0                 ;108
00013e  f4414100          ORR      r1,r1,#0x8000         ;108
000142  f0410180          ORR      r1,r1,#0x80           ;108
000146  4a41              LDR      r2,|L2.588|
000148  6011              STR      r1,[r2,#0]            ;108
00014a  e7c0              B        |L2.206|
                  |L2.332|
00014c  f4144f00          TST      r4,#0x8000            ;112
000150  d06b              BEQ      |L2.554|
000152  483e              LDR      r0,|L2.588|
000154  6800              LDR      r0,[r0,#0]            ;114
000156  f3c0000e          UBFX     r0,r0,#0,#15          ;114
00015a  f648718f          MOV      r1,#0x8f8f            ;114
00015e  4008              ANDS     r0,r0,r1              ;114
000160  493a              LDR      r1,|L2.588|
000162  6008              STR      r0,[r1,#0]            ;114
000164  f7fffffe          BL       Out0_Process
000168  4938              LDR      r1,|L2.588|
00016a  6809              LDR      r1,[r1,#0]            ;118
00016c  b289              UXTH     r1,r1                 ;118
00016e  f64b72bf          MOV      r2,#0xbfbf            ;118
000172  ea010002          AND      r0,r1,r2              ;118
000176  4936              LDR      r1,|L2.592|
000178  8809              LDRH     r1,[r1,#0]            ;118  ; SaveRState
00017a  f4115f80          TST      r1,#0x1000            ;118
00017e  d001              BEQ      |L2.388|
000180  f4805080          EOR      r0,r0,#0x1000         ;118
                  |L2.388|
000184  4932              LDR      r1,|L2.592|
000186  8809              LDRH     r1,[r1,#0]            ;118  ; SaveRState
000188  f4115f00          TST      r1,#0x2000            ;118
00018c  d001              BEQ      |L2.402|
00018e  f4805000          EOR      r0,r0,#0x2000         ;118
                  |L2.402|
000192  4930              LDR      r1,|L2.596|
000194  8809              LDRH     r1,[r1,#0]            ;118  ; SaveTState
000196  f0110f10          TST      r1,#0x10              ;118
00019a  d001              BEQ      |L2.416|
00019c  f0800010          EOR      r0,r0,#0x10           ;118
                  |L2.416|
0001a0  492c              LDR      r1,|L2.596|
0001a2  8809              LDRH     r1,[r1,#0]            ;118  ; SaveTState
0001a4  f0110f20          TST      r1,#0x20              ;118
0001a8  d001              BEQ      |L2.430|
0001aa  f0800020          EOR      r0,r0,#0x20           ;118
                  |L2.430|
0001ae  b281              UXTH     r1,r0                 ;118
0001b0  f4414100          ORR      r1,r1,#0x8000         ;118
0001b4  f0410180          ORR      r1,r1,#0x80           ;118
0001b8  4a24              LDR      r2,|L2.588|
0001ba  6011              STR      r1,[r2,#0]            ;118
0001bc  e787              B        |L2.206|
                  |L2.446|
0001be  4822              LDR      r0,|L2.584|
0001c0  7800              LDRB     r0,[r0,#0]            ;128  ; EPindex
0001c2  4922              LDR      r1,|L2.588|
0001c4  f8510020          LDR      r0,[r1,r0,LSL #2]     ;128
0001c8  b284              UXTH     r4,r0                 ;128
0001ca  f4144f00          TST      r4,#0x8000            ;129
0001ce  d014              BEQ      |L2.506|
0001d0  481d              LDR      r0,|L2.584|
0001d2  7800              LDRB     r0,[r0,#0]            ;132  ; EPindex
0001d4  f8510020          LDR      r0,[r1,r0,LSL #2]     ;132
0001d8  f3c0000e          UBFX     r0,r0,#0,#15          ;132
0001dc  f648718f          MOV      r1,#0x8f8f            ;132
0001e0  4008              ANDS     r0,r0,r1              ;132
0001e2  4919              LDR      r1,|L2.584|
0001e4  7809              LDRB     r1,[r1,#0]            ;132  ; EPindex
0001e6  4a19              LDR      r2,|L2.588|
0001e8  f8420021          STR      r0,[r2,r1,LSL #2]     ;132
0001ec  4916              LDR      r1,|L2.584|
0001ee  7809              LDRB     r1,[r1,#0]            ;135  ; EPindex
0001f0  1e49              SUBS     r1,r1,#1              ;135
0001f2  4a19              LDR      r2,|L2.600|
0001f4  f8520021          LDR      r0,[r2,r1,LSL #2]     ;135
0001f8  4780              BLX      r0                    ;135
                  |L2.506|
0001fa  f0140f80          TST      r4,#0x80              ;139
0001fe  d014              BEQ      |L2.554|
000200  4811              LDR      r0,|L2.584|
000202  7800              LDRB     r0,[r0,#0]            ;142  ; EPindex
000204  4911              LDR      r1,|L2.588|
000206  f8510020          LDR      r0,[r1,r0,LSL #2]     ;142
00020a  b280              UXTH     r0,r0                 ;142
00020c  f648710f          MOV      r1,#0x8f0f            ;142
000210  4008              ANDS     r0,r0,r1              ;142
000212  490d              LDR      r1,|L2.584|
000214  7809              LDRB     r1,[r1,#0]            ;142  ; EPindex
000216  4a0d              LDR      r2,|L2.588|
000218  f8420021          STR      r0,[r2,r1,LSL #2]     ;142
00021c  490a              LDR      r1,|L2.584|
00021e  7809              LDRB     r1,[r1,#0]            ;145  ; EPindex
000220  1e49              SUBS     r1,r1,#1              ;145
000222  4a0e              LDR      r2,|L2.604|
000224  f8520021          LDR      r0,[r2,r1,LSL #2]     ;145
000228  4780              BLX      r0                    ;145
                  |L2.554|
00022a  4808              LDR      r0,|L2.588|
00022c  3044              ADDS     r0,r0,#0x44           ;57
00022e  6800              LDR      r0,[r0,#0]            ;57
000230  b280              UXTH     r0,r0                 ;57
000232  4904              LDR      r1,|L2.580|
000234  8008              STRH     r0,[r1,#0]            ;57
000236  f4104f00          TST      r0,#0x8000            ;57
00023a  f47faee4          BNE      |L2.6|
00023e  bf00              NOP      
000240  e745              B        |L2.206|
;;;152    
                          ENDP

000242  0000              DCW      0x0000
                  |L2.580|
                          DCD      wIstr
                  |L2.584|
                          DCD      EPindex
                  |L2.588|
                          DCD      0x40005c00
                  |L2.592|
                          DCD      SaveRState
                  |L2.596|
                          DCD      SaveTState
                  |L2.600|
                          DCD      pEpInt_OUT
                  |L2.604|
                          DCD      pEpInt_IN

                          AREA ||.data||, DATA, ALIGN=1

                  SaveRState
000000  0000              DCB      0x00,0x00
                  SaveTState
000002  0000              DCB      0x00,0x00

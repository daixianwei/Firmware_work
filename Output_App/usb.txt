; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output_App\usb.o --asm_dir=..\Output_App\ --list_dir=..\Output_App\ --depend=..\Output_App\usb.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I.\System\CM3 -I.\System\FWlib\inc -I.\System\Startup -I.\ISR -I.\Main -I.\Management\DisplayDriver -I.\Management\HumanInput -I.\Management\Interface -I.\Management\RotationMotor -I.\Management\ScanMotor -I.\Management\Common_CRC -I.\Management\QRCode -I.\Management\SystemManage_RTC -I.\Management\SignalProcess_Sample -I.\USB -I.\USB\comm -I.\USB\lib -I.\USB\src -I.\USB\USB_Communication -ID:\Keil4.0\ARM\RV31\Inc -ID:\Keil4.0\ARM\CMSIS\Include -ID:\Keil4.0\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL -W --omf_browse=..\Output_App\usb.crf USB\USB_Communication\USB.c]
                          THUMB

                          AREA ||i.USB_BasicInit||, CODE, READONLY, ALIGN=2

                  USB_BasicInit PROC
;;;27     /******************************************************************************/
;;;28     void USB_BasicInit(void)
000000  b500              PUSH     {lr}
;;;29     {
000002  b085              SUB      sp,sp,#0x14
;;;30         GPIO_InitTypeDef GPIO_InitStructure;
;;;31     	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
;;;32     	NVIC_InitTypeDef NVIC_InitStructure;
;;;33     
;;;34     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
000004  2101              MOVS     r1,#1
000006  2004              MOVS     r0,#4
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;35     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00000c  2010              MOVS     r0,#0x10
00000e  f88d0013          STRB     r0,[sp,#0x13]
;;;36     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000012  2001              MOVS     r0,#1
000014  f88d0012          STRB     r0,[sp,#0x12]
;;;37     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
000018  0200              LSLS     r0,r0,#8
00001a  f8ad0010          STRH     r0,[sp,#0x10]
;;;38     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00001e  a904              ADD      r1,sp,#0x10
000020  481c              LDR      r0,|L1.148|
000022  f7fffffe          BL       GPIO_Init
;;;39     	GPIO_WriteBit(GPIOA, GPIO_Pin_8, Bit_RESET);
000026  2200              MOVS     r2,#0
000028  f44f7180          MOV      r1,#0x100
00002c  4819              LDR      r0,|L1.148|
00002e  f7fffffe          BL       GPIO_WriteBit
;;;40     
;;;41     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
000032  2101              MOVS     r1,#1
000034  4608              MOV      r0,r1
000036  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;42     	TIM_TimeBaseStructure.TIM_Period = 9;
00003a  2009              MOVS     r0,#9
00003c  f8ad0008          STRH     r0,[sp,#8]
;;;43     	TIM_TimeBaseStructure.TIM_Prescaler = 719;
000040  f24020cf          MOV      r0,#0x2cf
000044  f8ad0004          STRH     r0,[sp,#4]
;;;44     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
000048  2000              MOVS     r0,#0
00004a  f8ad000a          STRH     r0,[sp,#0xa]
;;;45     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Down;
00004e  2010              MOVS     r0,#0x10
000050  f8ad0006          STRH     r0,[sp,#6]
;;;46     	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
000054  a901              ADD      r1,sp,#4
000056  0680              LSLS     r0,r0,#26
000058  f7fffffe          BL       TIM_TimeBaseInit
;;;47     	TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);
00005c  2201              MOVS     r2,#1
00005e  4611              MOV      r1,r2
000060  0790              LSLS     r0,r2,#30
000062  f7fffffe          BL       TIM_ITConfig
;;;48     
;;;49     	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
000066  201c              MOVS     r0,#0x1c
000068  f88d0000          STRB     r0,[sp,#0]
;;;50     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 6;
00006c  2006              MOVS     r0,#6
00006e  f88d0001          STRB     r0,[sp,#1]
;;;51     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000072  2000              MOVS     r0,#0
000074  f88d0002          STRB     r0,[sp,#2]
;;;52     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000078  2001              MOVS     r0,#1
00007a  f88d0003          STRB     r0,[sp,#3]
;;;53     	NVIC_Init(&NVIC_InitStructure);
00007e  4668              MOV      r0,sp
000080  f7fffffe          BL       NVIC_Init
;;;54     
;;;55     	TIM_Cmd(TIM2, DISABLE);
000084  2100              MOVS     r1,#0
000086  f04f4080          MOV      r0,#0x40000000
00008a  f7fffffe          BL       TIM_Cmd
;;;56     }
00008e  b005              ADD      sp,sp,#0x14
000090  bd00              POP      {pc}
;;;57     
                          ENDP

000092  0000              DCW      0x0000
                  |L1.148|
                          DCD      0x40010800

                          AREA ||i.USB_VirtualCOM_Init||, CODE, READONLY, ALIGN=2

                  USB_VirtualCOM_Init PROC
;;;19     /******************************************************************************/
;;;20     void USB_VirtualCOM_Init(void)
000000  b510              PUSH     {r4,lr}
;;;21     {
;;;22         USB_BasicInit();
000002  f7fffffe          BL       USB_BasicInit
;;;23         USB_Config();
000006  f7fffffe          BL       USB_Config
;;;24     	Comm_FIFO_Init(&RxDataFIFO);
00000a  4802              LDR      r0,|L2.20|
00000c  f7fffffe          BL       Comm_FIFO_Init
;;;25     }
000010  bd10              POP      {r4,pc}
;;;26     
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      RxDataFIFO

                          AREA ||i.USB_VirtualCOM_Process||, CODE, READONLY, ALIGN=2

                  USB_VirtualCOM_Process PROC
;;;58     /******************************************************************************/
;;;59     void USB_VirtualCOM_Process(void)
000000  b510              PUSH     {r4,lr}
;;;60     {
000002  f5ad6dfb          SUB      sp,sp,#0x7d8
;;;61     	ErrorStatus Rxstatus;
;;;62     	DataTypedef RxData;
;;;63     	Rxstatus=Comm_FIFO_RxDataGet(&RxDataFIFO, &RxData);
000006  a901              ADD      r1,sp,#4
000008  4808              LDR      r0,|L3.44|
00000a  f7fffffe          BL       Comm_FIFO_RxDataGet
00000e  4604              MOV      r4,r0
;;;64     	if(Rxstatus)
000010  b14c              CBZ      r4,|L3.38|
;;;65     	{
;;;66     		HostComm_RecBufAvailable = 1;
000012  2001              MOVS     r0,#1
000014  4906              LDR      r1,|L3.48|
000016  7008              STRB     r0,[r1,#0]
;;;67     		memcpy(cmdBuffer, RxData.Data, RxData.len);
000018  f8bd2004          LDRH     r2,[sp,#4]
00001c  f10d0106          ADD      r1,sp,#6
000020  4804              LDR      r0,|L3.52|
000022  f7fffffe          BL       __aeabi_memcpy
                  |L3.38|
;;;68     	}
;;;69     }
000026  f50d6dfb          ADD      sp,sp,#0x7d8
00002a  bd10              POP      {r4,pc}
                          ENDP

                  |L3.44|
                          DCD      RxDataFIFO
                  |L3.48|
                          DCD      HostComm_RecBufAvailable
                  |L3.52|
                          DCD      cmdBuffer

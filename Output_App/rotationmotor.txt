; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output_App\rotationmotor.o --asm_dir=..\Output_App\ --list_dir=..\Output_App\ --depend=..\Output_App\rotationmotor.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I.\System\CM3 -I.\System\FWlib\inc -I.\System\Startup -I.\ISR -I.\Main -I.\Management\DisplayDriver -I.\Management\HumanInput -I.\Management\Interface -I.\Management\RotationMotor -I.\Management\ScanMotor -I.\Management\Common_CRC -I.\Management\QRCode -I.\Management\SystemManage_RTC -I.\Management\SignalProcess_Sample -I.\USB -I.\USB\comm -I.\USB\lib -I.\USB\src -I.\USB\USB_Communication -ID:\Keil4.0\ARM\RV31\Inc -ID:\Keil4.0\ARM\CMSIS\Include -ID:\Keil4.0\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL -W --omf_browse=..\Output_App\rotationmotor.crf Management\RotationMotor\RotationMotor.c]
                          THUMB

                          AREA ||i.Delay_us||, CODE, READONLY, ALIGN=1

                  Delay_us PROC
;;;53     /******************************************************************************/
;;;54     void Delay_us(int nCount)
000000  e005              B        |L1.14|
                  |L1.2|
;;;55     {
;;;56     	#define SW_72MHZ_1US_COUNT (102)
;;;57     	int subCount;
;;;58     	for(; nCount != 0; nCount--)
;;;59     	{
;;;60     		subCount = SW_72MHZ_1US_COUNT;
000002  2166              MOVS     r1,#0x66
;;;61     		for(; subCount != 0; subCount--);
000004  e000              B        |L1.8|
                  |L1.6|
000006  1e49              SUBS     r1,r1,#1
                  |L1.8|
000008  2900              CMP      r1,#0
00000a  d1fc              BNE      |L1.6|
00000c  1e40              SUBS     r0,r0,#1              ;58
                  |L1.14|
00000e  2800              CMP      r0,#0                 ;58
000010  d1f7              BNE      |L1.2|
;;;62     	}
;;;63     }
000012  4770              BX       lr
;;;64     
                          ENDP


                          AREA ||i.RotaMotorDriver_GPIO_Init||, CODE, READONLY, ALIGN=2

                  RotaMotorDriver_GPIO_Init PROC
;;;31     /******************************************************************************/
;;;32     void RotaMotorDriver_GPIO_Init(void)
000000  b508              PUSH     {r3,lr}
;;;33     {
;;;34        GPIO_InitTypeDef GPIO_InitStruct;
;;;35     
;;;36        GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000002  2010              MOVS     r0,#0x10
000004  f88d0003          STRB     r0,[sp,#3]
;;;37        GPIO_InitStruct.GPIO_Pin  =  MotorDriver_BUTTER_PIN;
000008  2040              MOVS     r0,#0x40
00000a  f8ad0000          STRH     r0,[sp,#0]
;;;38        GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00000e  2003              MOVS     r0,#3
000010  f88d0002          STRB     r0,[sp,#2]
;;;39        GPIO_Init(MotorDriver_BUTTER_PORT,&GPIO_InitStruct);
000014  4669              MOV      r1,sp
000016  480d              LDR      r0,|L2.76|
000018  f7fffffe          BL       GPIO_Init
;;;40     
;;;41        /* RotationMotor Pin Initialize PE 11 12 13 14 */
;;;42        GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00001c  2010              MOVS     r0,#0x10
00001e  f88d0003          STRB     r0,[sp,#3]
;;;43        GPIO_InitStruct.GPIO_Pin  = RotaMotorDriver_IN1_PIN |
000022  f44f4078          MOV      r0,#0xf800
000026  f8ad0000          STRH     r0,[sp,#0]
;;;44     		   RotaMotorDriver_IN2_PIN |RotaMotorDriver_IN3_PIN |
;;;45     		   RotaMotorDriver_IN4_PIN|RotaMotorDriver_EN_PIN;
;;;46        GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00002a  2003              MOVS     r0,#3
00002c  f88d0002          STRB     r0,[sp,#2]
;;;47        GPIO_Init(GPIOE,&GPIO_InitStruct);
000030  4669              MOV      r1,sp
000032  4806              LDR      r0,|L2.76|
000034  f7fffffe          BL       GPIO_Init
;;;48     
;;;49        GPIO_SetBits(RotaMotorDriver_EN_PORT, RotaMotorDriver_EN_PIN);
000038  f44f4100          MOV      r1,#0x8000
00003c  4803              LDR      r0,|L2.76|
00003e  f7fffffe          BL       GPIO_SetBits
;;;50        GPIO_SetBits(MotorDriver_BUTTER_PORT, MotorDriver_BUTTER_PIN);
000042  2140              MOVS     r1,#0x40
000044  4801              LDR      r0,|L2.76|
000046  f7fffffe          BL       GPIO_SetBits
;;;51     }
00004a  bd08              POP      {r3,pc}
;;;52     
                          ENDP

                  |L2.76|
                          DCD      0x40011800

                          AREA ||i.RotationMotor_Init||, CODE, READONLY, ALIGN=1

                  RotationMotor_Init PROC
;;;23     /******************************************************************************/
;;;24     void RotationMotor_Init(void)
000000  b510              PUSH     {r4,lr}
;;;25     {
;;;26     	RotaMotorDriver_GPIO_Init();
000002  f7fffffe          BL       RotaMotorDriver_GPIO_Init
;;;27     
;;;28     	RotaMotorDriver_PositionSensor_Init();
000006  f7fffffe          BL       RotaMotorDriver_PositionSensor_Init
;;;29     }
00000a  bd10              POP      {r4,pc}
;;;30     
                          ENDP


                          AREA ||i.RotationMotor_Input_StepDrive||, CODE, READONLY, ALIGN=2

                  RotationMotor_Input_StepDrive PROC
;;;81     /******************************************************************************/
;;;82     void RotationMotor_Input_StepDrive(uint8 Rotation_Direction,uint16 Step)
000000  b570              PUSH     {r4-r6,lr}
;;;83     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;84     	for(Step_count = Zero;Step_count < (Step);Step_count++)
000006  2000              MOVS     r0,#0
000008  4907              LDR      r1,|L4.40|
00000a  6008              STR      r0,[r1,#0]  ; Step_count
00000c  e007              B        |L4.30|
                  |L4.14|
;;;85     	{
;;;86     		RotationMotor_StepDrive_Min(Rotation_Direction);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       RotationMotor_StepDrive_Min
000014  4804              LDR      r0,|L4.40|
000016  6800              LDR      r0,[r0,#0]            ;84  ; Step_count
000018  1c40              ADDS     r0,r0,#1              ;84
00001a  4903              LDR      r1,|L4.40|
00001c  6008              STR      r0,[r1,#0]            ;84  ; Step_count
                  |L4.30|
00001e  4802              LDR      r0,|L4.40|
000020  6800              LDR      r0,[r0,#0]            ;84  ; Step_count
000022  42a0              CMP      r0,r4                 ;84
000024  d3f3              BCC      |L4.14|
;;;87     	}
;;;88     }
000026  bd70              POP      {r4-r6,pc}
;;;89     
                          ENDP

                  |L4.40|
                          DCD      Step_count

                          AREA ||i.RotationMotor_PIN||, CODE, READONLY, ALIGN=2

                  RotationMotor_PIN PROC
;;;90     /******************************************************************************/
;;;91     static void RotationMotor_PIN(uint8 Rotation_Direction,u8 MUTU)
000000  b570              PUSH     {r4-r6,lr}
;;;92     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;93     	switch(Rotation_Direction)
000006  b115              CBZ      r5,|L5.14|
000008  2d01              CMP      r5,#1
00000a  d152              BNE      |L5.178|
00000c  e028              B        |L5.96|
                  |L5.14|
;;;94     	{
;;;95     		case Reversal_Rotation:
;;;96     			GPIO_WriteBit(GPIOE,RotaMotorDriver_IN1_PIN,(Step2[MUTU]&0x10));   //电机反转
00000e  482a              LDR      r0,|L5.184|
000010  f8300014          LDRH     r0,[r0,r4,LSL #1]
000014  f0000210          AND      r2,r0,#0x10
000018  f44f6100          MOV      r1,#0x800
00001c  4827              LDR      r0,|L5.188|
00001e  f7fffffe          BL       GPIO_WriteBit
;;;97     			GPIO_WriteBit(GPIOE,RotaMotorDriver_IN2_PIN,(Step2[MUTU]&0x20));
000022  4825              LDR      r0,|L5.184|
000024  f8300014          LDRH     r0,[r0,r4,LSL #1]
000028  f0000220          AND      r2,r0,#0x20
00002c  f44f5180          MOV      r1,#0x1000
000030  4822              LDR      r0,|L5.188|
000032  f7fffffe          BL       GPIO_WriteBit
;;;98     			GPIO_WriteBit(GPIOE,RotaMotorDriver_IN3_PIN,(Step2[MUTU]&0x40));
000036  4820              LDR      r0,|L5.184|
000038  f8300014          LDRH     r0,[r0,r4,LSL #1]
00003c  f0000240          AND      r2,r0,#0x40
000040  f44f5100          MOV      r1,#0x2000
000044  481d              LDR      r0,|L5.188|
000046  f7fffffe          BL       GPIO_WriteBit
;;;99     			GPIO_WriteBit(GPIOE,RotaMotorDriver_IN4_PIN,(Step2[MUTU]&0x80));
00004a  481b              LDR      r0,|L5.184|
00004c  f8300014          LDRH     r0,[r0,r4,LSL #1]
000050  f0000280          AND      r2,r0,#0x80
000054  f44f4180          MOV      r1,#0x4000
000058  4818              LDR      r0,|L5.188|
00005a  f7fffffe          BL       GPIO_WriteBit
;;;100    		break;
00005e  e029              B        |L5.180|
                  |L5.96|
;;;101    
;;;102    		case Foreward_Rotation:
;;;103    			GPIO_WriteBit(GPIOE,RotaMotorDriver_IN1_PIN,(Step1[MUTU]&0x10));   //电机正转
000060  4817              LDR      r0,|L5.192|
000062  f8300014          LDRH     r0,[r0,r4,LSL #1]
000066  f0000210          AND      r2,r0,#0x10
00006a  f44f6100          MOV      r1,#0x800
00006e  4813              LDR      r0,|L5.188|
000070  f7fffffe          BL       GPIO_WriteBit
;;;104    			GPIO_WriteBit(GPIOE,RotaMotorDriver_IN2_PIN,(Step1[MUTU]&0x20));
000074  4812              LDR      r0,|L5.192|
000076  f8300014          LDRH     r0,[r0,r4,LSL #1]
00007a  f0000220          AND      r2,r0,#0x20
00007e  f44f5180          MOV      r1,#0x1000
000082  480e              LDR      r0,|L5.188|
000084  f7fffffe          BL       GPIO_WriteBit
;;;105    			GPIO_WriteBit(GPIOE,RotaMotorDriver_IN3_PIN,(Step1[MUTU]&0x40));
000088  480d              LDR      r0,|L5.192|
00008a  f8300014          LDRH     r0,[r0,r4,LSL #1]
00008e  f0000240          AND      r2,r0,#0x40
000092  f44f5100          MOV      r1,#0x2000
000096  4809              LDR      r0,|L5.188|
000098  f7fffffe          BL       GPIO_WriteBit
;;;106    			GPIO_WriteBit(GPIOE,RotaMotorDriver_IN4_PIN,(Step1[MUTU]&0x80));
00009c  4808              LDR      r0,|L5.192|
00009e  f8300014          LDRH     r0,[r0,r4,LSL #1]
0000a2  f0000280          AND      r2,r0,#0x80
0000a6  f44f4180          MOV      r1,#0x4000
0000aa  4804              LDR      r0,|L5.188|
0000ac  f7fffffe          BL       GPIO_WriteBit
;;;107    		break;
0000b0  e000              B        |L5.180|
                  |L5.178|
;;;108    
;;;109    		default:
;;;110    		break;
0000b2  bf00              NOP      
                  |L5.180|
0000b4  bf00              NOP                            ;100
;;;111    	}
;;;112    }
0000b6  bd70              POP      {r4-r6,pc}
;;;113    
                          ENDP

                  |L5.184|
                          DCD      Step2
                  |L5.188|
                          DCD      0x40011800
                  |L5.192|
                          DCD      Step1

                          AREA ||i.RotationMotor_SelfCheck_StepDrive||, CODE, READONLY, ALIGN=2

                  RotationMotor_SelfCheck_StepDrive PROC
;;;65     /******************************************************************************/
;;;66     void RotationMotor_SelfCheck_StepDrive(void)
000000  b510              PUSH     {r4,lr}
;;;67     {
;;;68     	if(Num_Down)
000002  480d              LDR      r0,|L6.56|
000004  7800              LDRB     r0,[r0,#0]  ; Num_Down
000006  b1a8              CBZ      r0,|L6.52|
;;;69     	{
;;;70     		SystemManage_5V_Enabled();
000008  f7fffffe          BL       SystemManage_5V_Enabled
;;;71     		while(!ROTA_POSSEN_INT_STATE())
00000c  e002              B        |L6.20|
                  |L6.14|
;;;72     		{
;;;73     			RotationMotor_StepDrive_Min(Foreward_Rotation);
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       RotationMotor_StepDrive_Min
                  |L6.20|
000014  2104              MOVS     r1,#4                 ;71
000016  4809              LDR      r0,|L6.60|
000018  f7fffffe          BL       GPIO_ReadInputDataBit
00001c  2800              CMP      r0,#0                 ;71
00001e  d0f6              BEQ      |L6.14|
;;;74     		}
;;;75     		RotationMotor_Input_StepDrive(Foreward_Rotation,Whole_Circle);
000020  f44f7100          MOV      r1,#0x200
000024  2001              MOVS     r0,#1
000026  f7fffffe          BL       RotationMotor_Input_StepDrive
;;;76     		Num_Down = 0;
00002a  2000              MOVS     r0,#0
00002c  4902              LDR      r1,|L6.56|
00002e  7008              STRB     r0,[r1,#0]
;;;77     		SystemManage_5V_Disabled();
000030  f7fffffe          BL       SystemManage_5V_Disabled
                  |L6.52|
;;;78     	}
;;;79     }
000034  bd10              POP      {r4,pc}
;;;80     
                          ENDP

000036  0000              DCW      0x0000
                  |L6.56|
                          DCD      Num_Down
                  |L6.60|
                          DCD      0x40010800

                          AREA ||i.RotationMotor_StepDrive_Min||, CODE, READONLY, ALIGN=1

                  RotationMotor_StepDrive_Min PROC
;;;114    /******************************************************************************/
;;;115    void RotationMotor_StepDrive_Min(uint8 Rotation_Direction)
000000  b570              PUSH     {r4-r6,lr}
;;;116    {
000002  4605              MOV      r5,r0
;;;117    	uint8 Mutually;
;;;118    	for(Mutually = Zero;Mutually< 8;Mutually++)
000004  2400              MOVS     r4,#0
000006  e008              B        |L7.26|
                  |L7.8|
;;;119    	{
;;;120    		RotationMotor_PIN(Rotation_Direction,Mutually);
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       RotationMotor_PIN
;;;121    		Delay_us(Time_10us);
000010  20b4              MOVS     r0,#0xb4
000012  f7fffffe          BL       Delay_us
000016  1c60              ADDS     r0,r4,#1              ;118
000018  b2c4              UXTB     r4,r0                 ;118
                  |L7.26|
00001a  2c08              CMP      r4,#8                 ;118
00001c  dbf4              BLT      |L7.8|
;;;122    	}
;;;123    }
00001e  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  Step_count
                          DCD      0x00000000
                  Num_Down
000004  0100              DCB      0x01,0x00
                  Step1
000006  0010              DCW      0x0010
000008  00300020          DCW      0x0030,0x0020
00000c  00600040          DCW      0x0060,0x0040
000010  00c00080          DCW      0x00c0,0x0080
000014  0090              DCW      0x0090
                  Step2
000016  0090              DCW      0x0090
000018  008000c0          DCW      0x0080,0x00c0
00001c  00400060          DCW      0x0040,0x0060
000020  00200030          DCW      0x0020,0x0030
000024  0010              DCW      0x0010

; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output_App\interface_result_2.o --asm_dir=..\Output_App\ --list_dir=..\Output_App\ --depend=..\Output_App\interface_result_2.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I.\System\CM3 -I.\System\FWlib\inc -I.\System\Startup -I.\ISR -I.\Main -I.\Management\DisplayDriver -I.\Management\HumanInput -I.\Management\Interface -I.\Management\RotationMotor -I.\Management\ScanMotor -I.\Management\Common_CRC -I.\Management\QRCode -I.\Management\SystemManage_RTC -I.\Management\SignalProcess_Sample -I.\USB -I.\USB\comm -I.\USB\lib -I.\USB\src -I.\USB\USB_Communication -ID:\Keil4.0\ARM\RV31\Inc -ID:\Keil4.0\ARM\CMSIS\Include -ID:\Keil4.0\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL -W --omf_browse=..\Output_App\interface_result_2.crf Management\Interface\Interface_Result_2.c]
                          THUMB

                          AREA ||i.Interface_Result_2||, CODE, READONLY, ALIGN=2

                  Interface_Result_2 PROC
;;;167    /******************************************************************************/
;;;168    uint8 Interface_Result_2(uint16 KeyCode)
000000  b510              PUSH     {r4,lr}
;;;169    {
000002  4604              MOV      r4,r0
;;;170    	Page_Flag = 1;
000004  2001              MOVS     r0,#1
000006  490d              LDR      r1,|L1.60|
000008  7008              STRB     r0,[r1,#0]
;;;171    	Exti_lock = DISABLE;
00000a  2000              MOVS     r0,#0
00000c  490c              LDR      r1,|L1.64|
00000e  7008              STRB     r0,[r1,#0]
;;;172    	Interface_Key = 2;
000010  2002              MOVS     r0,#2
000012  490c              LDR      r1,|L1.68|
000014  7008              STRB     r0,[r1,#0]
;;;173    	UI_WindowBlocks_Result_2 = sizeof(UI_WindowBlocksAttrArray_Result_2) >> 2;
000016  2005              MOVS     r0,#5
000018  490b              LDR      r1,|L1.72|
00001a  8008              STRH     r0,[r1,#0]
;;;174    	UI_Draw_Window_Result_2(UI_WindowBlocks_Result_2);
00001c  4608              MOV      r0,r1
00001e  8800              LDRH     r0,[r0,#0]  ; UI_WindowBlocks_Result_2
000020  f7fffffe          BL       UI_Draw_Window_Result_2
;;;175    	Exti_lock = ENABLE;
000024  2001              MOVS     r0,#1
000026  4906              LDR      r1,|L1.64|
000028  7008              STRB     r0,[r1,#0]
;;;176    	while(!key_state);
00002a  bf00              NOP      
                  |L1.44|
00002c  4807              LDR      r0,|L1.76|
00002e  7800              LDRB     r0,[r0,#0]  ; key_state
000030  2800              CMP      r0,#0
000032  d0fb              BEQ      |L1.44|
;;;177    	UI_state = UI_STATE_KEY_STATE;
000034  2001              MOVS     r0,#1
000036  4906              LDR      r1,|L1.80|
000038  7008              STRB     r0,[r1,#0]
;;;178    	return UI_STATE_RERUN;
;;;179    }
00003a  bd10              POP      {r4,pc}
;;;180    
                          ENDP

                  |L1.60|
                          DCD      Page_Flag
                  |L1.64|
                          DCD      Exti_lock
                  |L1.68|
                          DCD      Interface_Key
                  |L1.72|
                          DCD      UI_WindowBlocks_Result_2
                  |L1.76|
                          DCD      key_state
                  |L1.80|
                          DCD      UI_state

                          AREA ||i.UI_Draw_Window_Result_2||, CODE, READONLY, ALIGN=2

                  UI_Draw_Window_Result_2 PROC
;;;181    /******************************************************************************/
;;;182    void UI_Draw_Window_Result_2(uint16 blockNum)
000000  b570              PUSH     {r4-r6,lr}
;;;183    {
000002  4605              MOV      r5,r0
;;;184    	uint8 blockIndex = 0;					/* Draw blocks one by one */
000004  2400              MOVS     r4,#0
;;;185    	for (blockIndex = 0; blockIndex < blockNum; blockIndex++)
000006  bf00              NOP      
000008  e006              B        |L2.24|
                  |L2.10|
;;;186    	{
;;;187    		UI_Draw_block_Result_2(UI_WindowBlocksAttrArray_Result_2[blockIndex]);
00000a  4905              LDR      r1,|L2.32|
00000c  f8510024          LDR      r0,[r1,r4,LSL #2]
000010  f7fffffe          BL       UI_Draw_block_Result_2
000014  1c60              ADDS     r0,r4,#1              ;185
000016  b2c4              UXTB     r4,r0                 ;185
                  |L2.24|
000018  42ac              CMP      r4,r5                 ;185
00001a  dbf6              BLT      |L2.10|
;;;188    	}
;;;189    }
00001c  bd70              POP      {r4-r6,pc}
;;;190    
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      UI_WindowBlocksAttrArray_Result_2

                          AREA ||i.UI_Draw_block_Result_2||, CODE, READONLY, ALIGN=2

                  UI_Draw_block_Result_2 PROC
;;;191    /******************************************************************************/
;;;192    void UI_Draw_block_Result_2(block_attr_Result* block)
000000  b538              PUSH     {r3-r5,lr}
;;;193    {
000002  4604              MOV      r4,r0
;;;194    	Display_Time = 0;
000004  2000              MOVS     r0,#0
000006  4914              LDR      r1,|L3.88|
000008  7008              STRB     r0,[r1,#0]
;;;195    	if (block->rect_enabled)				/* 1. Draw Rect*/
00000a  7820              LDRB     r0,[r4,#0]
00000c  b138              CBZ      r0,|L3.30|
;;;196    	{
;;;197    		Lcd_ColorBox(block->rect_attr.startX, block->rect_attr.startY,
00000e  8960              LDRH     r0,[r4,#0xa]
000010  9000              STR      r0,[sp,#0]
000012  8923              LDRH     r3,[r4,#8]
000014  88e2              LDRH     r2,[r4,#6]
000016  88a1              LDRH     r1,[r4,#4]
000018  8860              LDRH     r0,[r4,#2]
00001a  f7fffffe          BL       Lcd_ColorBox
                  |L3.30|
;;;198    				block->rect_attr.width, block->rect_attr.height,
;;;199    				block->rect_attr.color);
;;;200    	}
;;;201    
;;;202    	if (block->char_enabled)				/* 2. Draw character */
00001e  7b20              LDRB     r0,[r4,#0xc]
000020  b138              CBZ      r0,|L3.50|
;;;203    	{
;;;204    
;;;205    		DisplayDriver_Text16_B(
000022  6920              LDR      r0,[r4,#0x10]
000024  9000              STR      r0,[sp,#0]
000026  8ba3              LDRH     r3,[r4,#0x1c]
000028  8b22              LDRH     r2,[r4,#0x18]
00002a  8ae1              LDRH     r1,[r4,#0x16]
00002c  8aa0              LDRH     r0,[r4,#0x14]
00002e  f7fffffe          BL       DisplayDriver_Text16_B
                  |L3.50|
;;;206    				block->char_attr.offsetX,block->char_attr.offsetY,
;;;207    				block->char_attr.color,block->char_attr.faceColor,
;;;208    				block->char_attr.str);
;;;209    	}
;;;210    
;;;211    	if (block->pic_enabled)					/* 2. Draw picture */
000032  f8940020          LDRB     r0,[r4,#0x20]
000036  b138              CBZ      r0,|L3.72|
;;;212    	{
;;;213    		DisplayDriver_DrawPic(block->pic_attr.offsetX,
000038  6a60              LDR      r0,[r4,#0x24]
00003a  9000              STR      r0,[sp,#0]
00003c  8de3              LDRH     r3,[r4,#0x2e]
00003e  8da2              LDRH     r2,[r4,#0x2c]
000040  8d61              LDRH     r1,[r4,#0x2a]
000042  8d20              LDRH     r0,[r4,#0x28]
000044  f7fffffe          BL       DisplayDriver_DrawPic
                  |L3.72|
;;;214    				block->pic_attr.offsetY, block->pic_attr.width,
;;;215    				block->pic_attr.height,block->pic_attr.src);
;;;216    	}
;;;217    	key_state = 0;
000048  2000              MOVS     r0,#0
00004a  4904              LDR      r1,|L3.92|
00004c  7008              STRB     r0,[r1,#0]
;;;218    	Display_Time = 1;
00004e  2001              MOVS     r0,#1
000050  4901              LDR      r1,|L3.88|
000052  7008              STRB     r0,[r1,#0]
;;;219    }
000054  bd38              POP      {r3-r5,pc}
                          ENDP

000056  0000              DCW      0x0000
                  |L3.88|
                          DCD      Display_Time
                  |L3.92|
                          DCD      key_state

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  5743473a          DCB      "WCG:   INV",0
000004  20202049
000008  4e5600  
00000b  4544473a          DCB      "EDG:   INV",0
00000f  20202049
000013  4e5600  
000016  555a493a          DCB      "UZI:   INV",0
00001a  20202049
00001e  4e5600  
000021  585a473a          DCB      "XZG:   INV",0
000025  20202049
000029  4e5600  
00002c  5043593a          DCB      "PCY:  INV",0
000030  2020494e
000034  5600    

                          AREA ||.data||, DATA, ALIGN=2

                  UI_WindowBlocks_Result_2
000000  0000              DCW      0x0000
000002  0000              DCB      0x00,0x00
                  block_Result_WCG
000004  0000              DCB      0x00,0x00
000006  0000              DCW      0x0000
000008  00000000          DCW      0x0000,0x0000
00000c  00000000          DCW      0x0000,0x0000
000010  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      ||.conststring||
000018  000c0036          DCW      0x000c,0x0036
00001c  0000ffff          DCW      0x0000,0xffff
000020  ffff              DCW      0xffff
000022  0000              DCB      0x00,0x00
000024  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
00002c  00000000          DCW      0x0000,0x0000
000030  00000000          DCW      0x0000,0x0000
                  block_Result_EDG
000034  0000              DCB      0x00,0x00
000036  0000              DCW      0x0000
000038  00000000          DCW      0x0000,0x0000
00003c  00000000          DCW      0x0000,0x0000
000040  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      ||.conststring||+0xb
000048  000c0046          DCW      0x000c,0x0046
00004c  0000ffff          DCW      0x0000,0xffff
000050  ffff              DCW      0xffff
000052  0000              DCB      0x00,0x00
000054  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
00005c  00000000          DCW      0x0000,0x0000
000060  00000000          DCW      0x0000,0x0000
                  block_Result_UZI
000064  0000              DCB      0x00,0x00
000066  0000              DCW      0x0000
000068  00000000          DCW      0x0000,0x0000
00006c  00000000          DCW      0x0000,0x0000
000070  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      ||.conststring||+0x16
000078  000c0056          DCW      0x000c,0x0056
00007c  0000ffff          DCW      0x0000,0xffff
000080  ffff              DCW      0xffff
000082  0000              DCB      0x00,0x00
000084  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
00008c  00000000          DCW      0x0000,0x0000
000090  00000000          DCW      0x0000,0x0000
                  block_Result_XZG
000094  0000              DCB      0x00,0x00
000096  0000              DCW      0x0000
000098  00000000          DCW      0x0000,0x0000
00009c  00000000          DCW      0x0000,0x0000
0000a0  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      ||.conststring||+0x21
0000a8  000c0066          DCW      0x000c,0x0066
0000ac  0000ffff          DCW      0x0000,0xffff
0000b0  ffff              DCW      0xffff
0000b2  0000              DCB      0x00,0x00
0000b4  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0000bc  00000000          DCW      0x0000,0x0000
0000c0  00000000          DCW      0x0000,0x0000
                  block_Result_PCY
0000c4  0000              DCB      0x00,0x00
0000c6  0000              DCW      0x0000
0000c8  00000000          DCW      0x0000,0x0000
0000cc  00000000          DCW      0x0000,0x0000
0000d0  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      ||.conststring||+0x2c
0000d8  000c0076          DCW      0x000c,0x0076
0000dc  0000ffff          DCW      0x0000,0xffff
0000e0  ffff              DCW      0xffff
0000e2  0000              DCB      0x00,0x00
0000e4  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0000ec  00000000          DCW      0x0000,0x0000
0000f0  00000000          DCW      0x0000,0x0000
                  block_Result_Arrow
0000f4  0100              DCB      0x01,0x00
0000f6  0059              DCW      0x0059
0000f8  008c0025          DCW      0x008c,0x0025
0000fc  0013fce0          DCW      0x0013,0xfce0
000100  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000108  00000000          DCW      0x0000,0x0000
00010c  00000000          DCW      0x0000,0x0000
000110  0000              DCW      0x0000
000112  0000              DCB      0x00,0x00
000114  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
00011c  00000000          DCW      0x0000,0x0000
000120  00000000          DCW      0x0000,0x0000
                  block_Result_Left_arrow
000124  0100              DCB      0x01,0x00
000126  0007              DCW      0x0007
000128  00340072          DCW      0x0034,0x0072
00012c  0055ffff          DCW      0x0055,0xffff
000130  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000138  00000000          DCW      0x0000,0x0000
00013c  00000000          DCW      0x0000,0x0000
000140  0000              DCW      0x0000
000142  0000              DCB      0x00,0x00
000144  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      gImage_Left_arrow
00014c  0005008e          DCW      0x0005,0x008e
000150  0023000f          DCW      0x0023,0x000f
                  UI_WindowBlocksAttrArray_Result_2
                          DCD      block_Result_Arrow
                          DCD      block_Result_Left_arrow
                          DCD      block_Result_WCG
                          DCD      block_Result_EDG
                          DCD      block_Result_UZI

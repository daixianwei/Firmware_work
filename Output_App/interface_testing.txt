; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output_App\interface_testing.o --asm_dir=..\Output_App\ --list_dir=..\Output_App\ --depend=..\Output_App\interface_testing.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I.\System\CM3 -I.\System\FWlib\inc -I.\System\Startup -I.\ISR -I.\Main -I.\Management\DisplayDriver -I.\Management\HumanInput -I.\Management\Interface -I.\Management\RotationMotor -I.\Management\ScanMotor -I.\Management\Common_CRC -I.\Management\QRCode -I.\Management\SystemManage_RTC -I.\Management\SignalProcess_Sample -I.\USB -I.\USB\comm -I.\USB\lib -I.\USB\src -I.\USB\USB_Communication -ID:\Keil4.0\ARM\RV31\Inc -ID:\Keil4.0\ARM\CMSIS\Include -ID:\Keil4.0\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL -W --omf_browse=..\Output_App\interface_testing.crf Management\Interface\Interface_Testing.c]
                          THUMB

                          AREA ||i.Acquisition_Signal||, CODE, READONLY, ALIGN=2

                  Acquisition_Signal PROC
;;;114    /******************************************************************************/
;;;115    void Acquisition_Signal(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;116    {
;;;117    	uint8 i = 0,j = 0,Step_Count = 25,Step_Start = 14;
000002  2400              MOVS     r4,#0
000004  2500              MOVS     r5,#0
000006  2619              MOVS     r6,#0x19
000008  270e              MOVS     r7,#0xe
;;;118    
;;;119    	SignalSample_count = 0;
00000a  2000              MOVS     r0,#0
00000c  491b              LDR      r1,|L1.124|
00000e  6008              STR      r0,[r1,#0]  ; SignalSample_count
;;;120    	SystemManage_5V_Enabled();
000010  f7fffffe          BL       SystemManage_5V_Enabled
;;;121    	/*第二步:旋转360度，环绕杯子采集信号*/
;;;122    	for(i = 0;i<10;i++)
000014  bf00              NOP      
000016  e02b              B        |L1.112|
                  |L1.24|
;;;123    	{
;;;124    		if(i >= 9)
000018  2c09              CMP      r4,#9
00001a  db04              BLT      |L1.38|
;;;125    		{
;;;126    			RotationMotor_Input_StepDrive(Foreward_Rotation,53);
00001c  2135              MOVS     r1,#0x35
00001e  2001              MOVS     r0,#1
000020  f7fffffe          BL       RotationMotor_Input_StepDrive
000024  e003              B        |L1.46|
                  |L1.38|
;;;127    		}
;;;128    		else
;;;129    		{
;;;130    			RotationMotor_Input_StepDrive(Foreward_Rotation,51);
000026  2133              MOVS     r1,#0x33
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       RotationMotor_Input_StepDrive
                  |L1.46|
;;;131    		}
;;;132    		SignalSample_SampleStrip(0);
00002e  2000              MOVS     r0,#0
000030  f7fffffe          BL       SignalSample_SampleStrip
;;;133    
;;;134    		for(j = Step_Start;j < Step_Count;j++)		/*每次进度条走十格*/
000034  463d              MOV      r5,r7
000036  e013              B        |L1.96|
                  |L1.56|
;;;135    		{
;;;136    			Delay_ms(30);
000038  201e              MOVS     r0,#0x1e
00003a  f7fffffe          BL       Delay_ms
;;;137    			Display_Time = 0;
00003e  2000              MOVS     r0,#0
000040  490f              LDR      r1,|L1.128|
000042  7008              STRB     r0,[r1,#0]
;;;138    			Lcd_ColorBox(j,63,1,15,BACKCOLOR_CONTENT_BAR);
000044  f24c20e0          MOV      r0,#0xc2e0
000048  230f              MOVS     r3,#0xf
00004a  2201              MOVS     r2,#1
00004c  213f              MOVS     r1,#0x3f
00004e  9000              STR      r0,[sp,#0]
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       Lcd_ColorBox
;;;139    			Display_Time = 1;
000056  2001              MOVS     r0,#1
000058  4909              LDR      r1,|L1.128|
00005a  7008              STRB     r0,[r1,#0]
00005c  1c68              ADDS     r0,r5,#1              ;134
00005e  b2c5              UXTB     r5,r0                 ;134
                  |L1.96|
000060  42b5              CMP      r5,r6                 ;134
000062  dbe9              BLT      |L1.56|
;;;140    		}
;;;141    		Step_Start = Step_Count;					/*重置进度条开始位置*/
000064  4637              MOV      r7,r6
;;;142    		Step_Count += 10;
000066  f106000a          ADD      r0,r6,#0xa
00006a  b2c6              UXTB     r6,r0
00006c  1c60              ADDS     r0,r4,#1              ;122
00006e  b2c4              UXTB     r4,r0                 ;122
                  |L1.112|
000070  2c0a              CMP      r4,#0xa               ;122
000072  dbd1              BLT      |L1.24|
;;;143    	}
;;;144    	SystemManage_5V_Disabled();
000074  f7fffffe          BL       SystemManage_5V_Disabled
;;;145    }
000078  bdf8              POP      {r3-r7,pc}
;;;146    
                          ENDP

00007a  0000              DCW      0x0000
                  |L1.124|
                          DCD      SignalSample_count
                  |L1.128|
                          DCD      Display_Time

                          AREA ||i.Get_Start_Postion||, CODE, READONLY, ALIGN=2

                  Get_Start_Postion PROC
;;;147    /******************************************************************************/
;;;148    uint16 Get_Start_Postion(void)
000000  b570              PUSH     {r4-r6,lr}
;;;149    {
;;;150    	uint16 i = 0;
000002  2400              MOVS     r4,#0
;;;151    	uint16 Start_Postion=0;
000004  2500              MOVS     r5,#0
;;;152    	SignalSample_count = 0;
000006  2000              MOVS     r0,#0
000008  4931              LDR      r1,|L2.208|
00000a  6008              STR      r0,[r1,#0]  ; SignalSample_count
;;;153    	/* 第一步:扫描电机转到中间位置 */
;;;154    	SystemManage_5V_Enabled();
00000c  f7fffffe          BL       SystemManage_5V_Enabled
;;;155    	ScanMotorDriver_Goto_CentrePosition();
000010  f7fffffe          BL       ScanMotorDriver_Goto_CentrePosition
;;;156    	SignalSample_Sample_EnterCriticalArea();
000014  f7fffffe          BL       SignalSample_Sample_EnterCriticalArea
;;;157    	Delay_ms(200);
000018  20c8              MOVS     r0,#0xc8
00001a  f7fffffe          BL       Delay_ms
;;;158    	for(i = 0;i < Whole_Circle;i++)
00001e  bf00              NOP      
000020  e011              B        |L2.70|
                  |L2.34|
;;;159    	{
;;;160    		RotationMotor_Input_StepDrive(Foreward_Rotation,1);
000022  2101              MOVS     r1,#1
000024  4608              MOV      r0,r1
000026  f7fffffe          BL       RotationMotor_Input_StepDrive
;;;161    		SignalProcess_sampleBuffer[SignalSample_count++]
00002a  f7fffffe          BL       SignalProcess_Collecting_Data
00002e  b281              UXTH     r1,r0
000030  4827              LDR      r0,|L2.208|
000032  6802              LDR      r2,[r0,#0]  ; SignalSample_count
000034  6800              LDR      r0,[r0,#0]  ; SignalSample_count
000036  1c40              ADDS     r0,r0,#1
000038  4b25              LDR      r3,|L2.208|
00003a  6018              STR      r0,[r3,#0]  ; SignalSample_count
00003c  4825              LDR      r0,|L2.212|
00003e  f8201012          STRH     r1,[r0,r2,LSL #1]
000042  1c60              ADDS     r0,r4,#1              ;158
000044  b284              UXTH     r4,r0                 ;158
                  |L2.70|
000046  f5b47f00          CMP      r4,#0x200             ;158
00004a  dbea              BLT      |L2.34|
;;;162    									= SignalProcess_Collecting_Data();
;;;163    	}
;;;164    	SignalSample_Sample_Timer_Disabled();
00004c  f7fffffe          BL       SignalSample_Sample_Timer_Disabled
;;;165    	ScanMotorDriver_Goto_BasePosition();
000050  f7fffffe          BL       ScanMotorDriver_Goto_BasePosition
;;;166    
;;;167    	/*第三步:数据处理得到杯子检测的起始位置*/
;;;168    	/*1.对数据进行移动平均*/
;;;169    	SignalSample_Moving_Average_Data(SignalProcess_sampleBuffer,SIGNALSAMPLE_MAX_COUNT,5);
000054  2205              MOVS     r2,#5
000056  f44f7100          MOV      r1,#0x200
00005a  481e              LDR      r0,|L2.212|
00005c  f7fffffe          BL       SignalSample_Moving_Average_Data
;;;170    
;;;171    	/*2.有无杯子判断*/
;;;172    	if((Get_sampleBuffer_Max_Value()) < BOUNDARY_VALUE)
000060  f7fffffe          BL       Get_sampleBuffer_Max_Value
000064  f5b07ffa          CMP      r0,#0x1f4
000068  da02              BGE      |L2.112|
;;;173    	{
;;;174    		Start_Postion = NO_CUP;
00006a  2500              MOVS     r5,#0
;;;175    		return Start_Postion;
00006c  4628              MOV      r0,r5
                  |L2.110|
;;;176    	}
;;;177    
;;;178    	/*3.减去临界值，获得易处理的数据*/
;;;179    	for(i = 0;i < SIGNALSAMPLE_MAX_COUNT;i++)
;;;180    	{
;;;181    		if(SignalProcess_sampleBuffer[i] < BOUNDARY_VALUE)
;;;182    		{
;;;183    			SignalProcess_sampleBuffer[i] = 0;
;;;184    		}
;;;185    		else
;;;186    		{
;;;187    			SignalProcess_sampleBuffer[i] = SignalProcess_sampleBuffer[i] - BOUNDARY_VALUE;
;;;188    		}
;;;189    	}
;;;190    	/*4.得到杯子的起始位置*/
;;;191    	for(i = 0;i < SIGNALSAMPLE_MAX_COUNT;i++)
;;;192    	{
;;;193    		if((SignalProcess_sampleBuffer[i] == 0) && (SignalProcess_sampleBuffer[i+1] > 0) )
;;;194    		{
;;;195    			Start_Postion = i;
;;;196    			break;
;;;197    		}
;;;198    	}
;;;199    	return Start_Postion;
;;;200    }
00006e  bd70              POP      {r4-r6,pc}
                  |L2.112|
000070  2400              MOVS     r4,#0                 ;179
000072  e014              B        |L2.158|
                  |L2.116|
000074  4817              LDR      r0,|L2.212|
000076  f8300014          LDRH     r0,[r0,r4,LSL #1]     ;181
00007a  f5b07ffa          CMP      r0,#0x1f4             ;181
00007e  da04              BGE      |L2.138|
000080  2000              MOVS     r0,#0                 ;183
000082  4914              LDR      r1,|L2.212|
000084  f8210014          STRH     r0,[r1,r4,LSL #1]     ;183
000088  e007              B        |L2.154|
                  |L2.138|
00008a  4812              LDR      r0,|L2.212|
00008c  f8300014          LDRH     r0,[r0,r4,LSL #1]     ;187
000090  f5a070fa          SUB      r0,r0,#0x1f4          ;187
000094  490f              LDR      r1,|L2.212|
000096  f8210014          STRH     r0,[r1,r4,LSL #1]     ;187
                  |L2.154|
00009a  1c60              ADDS     r0,r4,#1              ;179
00009c  b284              UXTH     r4,r0                 ;179
                  |L2.158|
00009e  f5b47f00          CMP      r4,#0x200             ;179
0000a2  dbe7              BLT      |L2.116|
0000a4  2400              MOVS     r4,#0                 ;191
0000a6  e00d              B        |L2.196|
                  |L2.168|
0000a8  480a              LDR      r0,|L2.212|
0000aa  f8300014          LDRH     r0,[r0,r4,LSL #1]     ;193
0000ae  b938              CBNZ     r0,|L2.192|
0000b0  4908              LDR      r1,|L2.212|
0000b2  1c60              ADDS     r0,r4,#1              ;193
0000b4  f8310010          LDRH     r0,[r1,r0,LSL #1]     ;193
0000b8  2800              CMP      r0,#0                 ;193
0000ba  dd01              BLE      |L2.192|
0000bc  4625              MOV      r5,r4                 ;195
0000be  e004              B        |L2.202|
                  |L2.192|
0000c0  1c60              ADDS     r0,r4,#1              ;191
0000c2  b284              UXTH     r4,r0                 ;191
                  |L2.196|
0000c4  f5b47f00          CMP      r4,#0x200             ;191
0000c8  dbee              BLT      |L2.168|
                  |L2.202|
0000ca  bf00              NOP                            ;196
0000cc  4628              MOV      r0,r5                 ;199
0000ce  e7ce              B        |L2.110|
;;;201    
                          ENDP

                  |L2.208|
                          DCD      SignalSample_count
                  |L2.212|
                          DCD      SignalProcess_sampleBuffer

                          AREA ||i.Get_sampleBuffer_Max_Value||, CODE, READONLY, ALIGN=2

                  Get_sampleBuffer_Max_Value PROC
;;;202    /******************************************************************************/
;;;203    uint16 Get_sampleBuffer_Max_Value(void)
000000  2100              MOVS     r1,#0
;;;204    {
;;;205    	int j=0,max = 0;
000002  2200              MOVS     r2,#0
;;;206    	for(j = 0;j < SIGNALSAMPLE_MAX_COUNT;j++)
000004  bf00              NOP      
000006  e011              B        |L3.44|
                  |L3.8|
;;;207    	{
;;;208    		if(max <= SignalProcess_sampleBuffer[j])
000008  480b              LDR      r0,|L3.56|
00000a  f8300011          LDRH     r0,[r0,r1,LSL #1]
00000e  4290              CMP      r0,r2
000010  db02              BLT      |L3.24|
;;;209    		{
;;;210    			max = SignalProcess_sampleBuffer[j];
000012  4809              LDR      r0,|L3.56|
000014  f8302011          LDRH     r2,[r0,r1,LSL #1]
                  |L3.24|
;;;211    		}
;;;212    
;;;213    		if(!SignalProcess_sampleBuffer[j])
000018  4807              LDR      r0,|L3.56|
00001a  f8300011          LDRH     r0,[r0,r1,LSL #1]
00001e  b920              CBNZ     r0,|L3.42|
;;;214    		{
;;;215    				Cup_Count--;
000020  4806              LDR      r0,|L3.60|
000022  7800              LDRB     r0,[r0,#0]  ; Cup_Count
000024  1e40              SUBS     r0,r0,#1
000026  4b05              LDR      r3,|L3.60|
000028  7018              STRB     r0,[r3,#0]
                  |L3.42|
00002a  1c49              ADDS     r1,r1,#1              ;206
                  |L3.44|
00002c  f5b17f00          CMP      r1,#0x200             ;206
000030  dbea              BLT      |L3.8|
;;;216    		}
;;;217    	}
;;;218    	return max;
000032  b290              UXTH     r0,r2
;;;219    }
000034  4770              BX       lr
;;;220    
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      SignalProcess_sampleBuffer
                  |L3.60|
                          DCD      Cup_Count

                          AREA ||i.Interface_Testing||, CODE, READONLY, ALIGN=2

                  Interface_Testing PROC
;;;55     /******************************************************************************/
;;;56     uint8 Interface_Testing(uint16 KeyCode)
000000  b570              PUSH     {r4-r6,lr}
;;;57     {
000002  4605              MOV      r5,r0
;;;58     	uint16 Start_Postion=0;
000004  2400              MOVS     r4,#0
;;;59     	Exti_lock = DISABLE;
000006  2000              MOVS     r0,#0
000008  4912              LDR      r1,|L4.84|
00000a  7008              STRB     r0,[r1,#0]
;;;60     	UI_WindowBlocks_Testing = sizeof(UI_WindowBlocksAttrArray_Testing) >> 2;
00000c  2002              MOVS     r0,#2
00000e  4912              LDR      r1,|L4.88|
000010  8008              STRH     r0,[r1,#0]
;;;61     	UI_Draw_Window_Testing(UI_WindowBlocks_Testing);
000012  4608              MOV      r0,r1
000014  8800              LDRH     r0,[r0,#0]  ; UI_WindowBlocks_Testing
000016  f7fffffe          BL       UI_Draw_Window_Testing
;;;62     	Start_Postion = Get_Start_Postion();
00001a  f7fffffe          BL       Get_Start_Postion
00001e  4604              MOV      r4,r0
;;;63     	SystemManage_5V_Enabled();
000020  f7fffffe          BL       SystemManage_5V_Enabled
;;;64     	RotationMotor_Input_StepDrive(Foreward_Rotation,Start_Postion);
000024  4621              MOV      r1,r4
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       RotationMotor_Input_StepDrive
;;;65     	SystemManage_5V_Disabled();
00002c  f7fffffe          BL       SystemManage_5V_Disabled
;;;66     	if(Cup_Count)
000030  480a              LDR      r0,|L4.92|
000032  7800              LDRB     r0,[r0,#0]  ; Cup_Count
000034  b128              CBZ      r0,|L4.66|
;;;67     	{
;;;68     		Acquisition_Signal();
000036  f7fffffe          BL       Acquisition_Signal
;;;69     		UI_state = UI_STATE_RESULT;
00003a  200a              MOVS     r0,#0xa
00003c  4908              LDR      r1,|L4.96|
00003e  7008              STRB     r0,[r1,#0]
000040  e002              B        |L4.72|
                  |L4.66|
;;;70     	}
;;;71     	else
;;;72     	{
;;;73     		UI_state = UI_STATE_INSERT_CUP;
000042  200c              MOVS     r0,#0xc
000044  4906              LDR      r1,|L4.96|
000046  7008              STRB     r0,[r1,#0]
                  |L4.72|
;;;74     	}
;;;75     	Delay_ms(500);
000048  f44f70fa          MOV      r0,#0x1f4
00004c  f7fffffe          BL       Delay_ms
;;;76     	return UI_STATE_RERUN;
000050  2001              MOVS     r0,#1
;;;77     }
000052  bd70              POP      {r4-r6,pc}
;;;78     
                          ENDP

                  |L4.84|
                          DCD      Exti_lock
                  |L4.88|
                          DCD      UI_WindowBlocks_Testing
                  |L4.92|
                          DCD      Cup_Count
                  |L4.96|
                          DCD      UI_state

                          AREA ||i.SignalSample_Moving_Average_Data||, CODE, READONLY, ALIGN=1

                  SignalSample_Moving_Average_Data PROC
;;;221    /******************************************************************************/
;;;222    void SignalSample_Moving_Average_Data(uint16 *Data,uint16 Length,uint16 Period)
000000  b570              PUSH     {r4-r6,lr}
;;;223    {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;224    	uint16 i=0,j=0;
000006  2000              MOVS     r0,#0
000008  2100              MOVS     r1,#0
;;;225    	uint32 Num = 0;
00000a  2500              MOVS     r5,#0
;;;226    	/*对数据进行移动平均*/
;;;227    	for(i = 0;i < Length-Period;i++)
00000c  bf00              NOP      
00000e  e010              B        |L5.50|
                  |L5.16|
;;;228    	{
;;;229    		for(j = 0;j < Period;j++)
000010  2100              MOVS     r1,#0
000012  e005              B        |L5.32|
                  |L5.20|
;;;230    		{
;;;231    			Num += Data[i+j];
000014  1846              ADDS     r6,r0,r1
000016  f8336016          LDRH     r6,[r3,r6,LSL #1]
00001a  4435              ADD      r5,r5,r6
00001c  1c4e              ADDS     r6,r1,#1              ;229
00001e  b2b1              UXTH     r1,r6                 ;229
                  |L5.32|
000020  4291              CMP      r1,r2                 ;229
000022  dbf7              BLT      |L5.20|
;;;232    		}
;;;233    		Data[i] = Num/Period;
000024  fbb5f6f2          UDIV     r6,r5,r2
000028  f8236010          STRH     r6,[r3,r0,LSL #1]
;;;234    		Num=0;
00002c  2500              MOVS     r5,#0
00002e  1c46              ADDS     r6,r0,#1              ;227
000030  b2b0              UXTH     r0,r6                 ;227
                  |L5.50|
000032  1aa6              SUBS     r6,r4,r2              ;227
000034  4286              CMP      r6,r0                 ;227
000036  dceb              BGT      |L5.16|
;;;235    	}
;;;236    }
000038  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.UI_Draw_Window_Testing||, CODE, READONLY, ALIGN=2

                  UI_Draw_Window_Testing PROC
;;;82     /******************************************************************************/
;;;83     void UI_Draw_Window_Testing(uint16 blockNum)
000000  b570              PUSH     {r4-r6,lr}
;;;84     {
000002  4605              MOV      r5,r0
;;;85     	uint8 blockIndex = 0;					/* Draw blocks one by one */
000004  2400              MOVS     r4,#0
;;;86     	for (blockIndex = 0; blockIndex < blockNum; blockIndex++)
000006  bf00              NOP      
000008  e006              B        |L6.24|
                  |L6.10|
;;;87     	{
;;;88     		UI_Draw_block_Testing(UI_WindowBlocksAttrArray_Testing[blockIndex]);
00000a  4905              LDR      r1,|L6.32|
00000c  f8510024          LDR      r0,[r1,r4,LSL #2]
000010  f7fffffe          BL       UI_Draw_block_Testing
000014  1c60              ADDS     r0,r4,#1              ;86
000016  b2c4              UXTB     r4,r0                 ;86
                  |L6.24|
000018  42ac              CMP      r4,r5                 ;86
00001a  dbf6              BLT      |L6.10|
;;;89     	}
;;;90     }
00001c  bd70              POP      {r4-r6,pc}
;;;91     
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      UI_WindowBlocksAttrArray_Testing

                          AREA ||i.UI_Draw_block_Testing||, CODE, READONLY, ALIGN=2

                  UI_Draw_block_Testing PROC
;;;92     /******************************************************************************/
;;;93     void UI_Draw_block_Testing(block_attr_Testing* block)
000000  b538              PUSH     {r3-r5,lr}
;;;94     {
000002  4604              MOV      r4,r0
;;;95     	Display_Time = 0;
000004  2000              MOVS     r0,#0
000006  490e              LDR      r1,|L7.64|
000008  7008              STRB     r0,[r1,#0]
;;;96     	if (block->rect_enabled)				/* 1. Draw Rect*/
00000a  7820              LDRB     r0,[r4,#0]
00000c  b138              CBZ      r0,|L7.30|
;;;97     	{
;;;98     		Lcd_ColorBox(block->rect_attr.startX, block->rect_attr.startY,
00000e  8960              LDRH     r0,[r4,#0xa]
000010  9000              STR      r0,[sp,#0]
000012  8923              LDRH     r3,[r4,#8]
000014  88e2              LDRH     r2,[r4,#6]
000016  88a1              LDRH     r1,[r4,#4]
000018  8860              LDRH     r0,[r4,#2]
00001a  f7fffffe          BL       Lcd_ColorBox
                  |L7.30|
;;;99     				block->rect_attr.width, block->rect_attr.height,
;;;100    				block->rect_attr.color);
;;;101    	}
;;;102    	if (block->char_enabled)				/* 2. Draw character */
00001e  7b20              LDRB     r0,[r4,#0xc]
000020  b138              CBZ      r0,|L7.50|
;;;103    	{
;;;104    
;;;105    			DisplayDriver_Text16_B(
000022  6920              LDR      r0,[r4,#0x10]
000024  9000              STR      r0,[sp,#0]
000026  8ba3              LDRH     r3,[r4,#0x1c]
000028  8b22              LDRH     r2,[r4,#0x18]
00002a  8ae1              LDRH     r1,[r4,#0x16]
00002c  8aa0              LDRH     r0,[r4,#0x14]
00002e  f7fffffe          BL       DisplayDriver_Text16_B
                  |L7.50|
;;;106    					block->char_attr.offsetX,block->char_attr.offsetY,
;;;107    					block->char_attr.color,block->char_attr.faceColor,
;;;108    					block->char_attr.str);
;;;109    	}
;;;110    	Display_Time = 1;
000032  2001              MOVS     r0,#1
000034  4902              LDR      r1,|L7.64|
000036  7008              STRB     r0,[r1,#0]
;;;111    	key_state = DISABLE;
000038  2000              MOVS     r0,#0
00003a  4902              LDR      r1,|L7.68|
00003c  7008              STRB     r0,[r1,#0]
;;;112    }
00003e  bd38              POP      {r3-r5,pc}
;;;113    
                          ENDP

                  |L7.64|
                          DCD      Display_Time
                  |L7.68|
                          DCD      key_state

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  74657374          DCB      "testing...",0
000004  696e672e
000008  2e2e00  

                          AREA ||.data||, DATA, ALIGN=2

                  UI_WindowBlocks_Testing
000000  0000              DCW      0x0000
000002  0000              DCB      0x00,0x00
                  block_Testing_1
000004  0100              DCB      0x01,0x00
000006  0000              DCW      0x0000
000008  00140080          DCW      0x0014,0x0080
00000c  008cfce0          DCW      0x008c,0xfce0
000010  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000018  00000000          DCW      0x0000,0x0000
00001c  00000000          DCW      0x0000,0x0000
000020  0000              DCW      0x0000
000022  0000              DCB      0x00,0x00
                  block_Testing_2
000024  0100              DCB      0x01,0x00
000026  000e              DCW      0x000e
000028  003f0065          DCW      0x003f,0x0065
00002c  000fffff          DCW      0x000f,0xffff
000030  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      ||.conststring||
000038  001a0050          DCW      0x001a,0x0050
00003c  0000fce0          DCW      0x0000,0xfce0
000040  fce0              DCW      0xfce0
000042  0000              DCB      0x00,0x00
                  UI_WindowBlocksAttrArray_Testing
                          DCD      block_Testing_1
                          DCD      block_Testing_2

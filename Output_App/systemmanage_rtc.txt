; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output_App\systemmanage_rtc.o --asm_dir=..\Output_App\ --list_dir=..\Output_App\ --depend=..\Output_App\systemmanage_rtc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I.\System\CM3 -I.\System\FWlib\inc -I.\System\Startup -I.\ISR -I.\Main -I.\Management\DisplayDriver -I.\Management\HumanInput -I.\Management\Interface -I.\Management\RotationMotor -I.\Management\ScanMotor -I.\Management\Common_CRC -I.\Management\QRCode -I.\Management\SystemManage_RTC -I.\Management\SignalProcess_Sample -I.\USB -I.\USB\comm -I.\USB\lib -I.\USB\src -I.\USB\USB_Communication -ID:\Keil4.0\ARM\RV31\Inc -ID:\Keil4.0\ARM\CMSIS\Include -ID:\Keil4.0\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL -W --omf_browse=..\Output_App\systemmanage_rtc.crf Management\SystemManage_RTC\SystemManage_RTC.c]
                          THUMB

                          AREA ||i.Delay_us_SW||, CODE, READONLY, ALIGN=1

                  Delay_us_SW PROC
;;;25     /******************************************************************************/
;;;26     void Delay_us_SW(__IO uint32 nCount)
000000  e005              B        |L1.14|
                  |L1.2|
;;;27     {
;;;28     #define SW_72MHZ_1MS_COUNT (10)
;;;29     	uint32 subCount;
;;;30     	for(; nCount != 0; nCount--)
;;;31     	{
;;;32     		subCount = SW_72MHZ_1MS_COUNT;
000002  210a              MOVS     r1,#0xa
;;;33     		for(; subCount != 0; subCount--);
000004  e000              B        |L1.8|
                  |L1.6|
000006  1e49              SUBS     r1,r1,#1
                  |L1.8|
000008  2900              CMP      r1,#0
00000a  d1fc              BNE      |L1.6|
00000c  1e40              SUBS     r0,r0,#1              ;30
                  |L1.14|
00000e  2800              CMP      r0,#0                 ;30
000010  d1f7              BNE      |L1.2|
;;;34     	}
;;;35     }
000012  4770              BX       lr
;;;36     
                          ENDP


                          AREA ||i.I2C_Ack||, CODE, READONLY, ALIGN=2

                  I2C_Ack PROC
;;;132    /******************************************************************************/
;;;133    void I2C_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;134    {
;;;135    	SCL_L();
000002  2140              MOVS     r1,#0x40
000004  480d              LDR      r0,|L2.60|
000006  f7fffffe          BL       GPIO_ResetBits
;;;136    	Delay_us_SW(20);
00000a  2014              MOVS     r0,#0x14
00000c  f7fffffe          BL       Delay_us_SW
;;;137    	SDA_L();
000010  2180              MOVS     r1,#0x80
000012  480a              LDR      r0,|L2.60|
000014  f7fffffe          BL       GPIO_ResetBits
;;;138    	Delay_us_SW(20);
000018  2014              MOVS     r0,#0x14
00001a  f7fffffe          BL       Delay_us_SW
;;;139    	SCL_H();
00001e  2140              MOVS     r1,#0x40
000020  4806              LDR      r0,|L2.60|
000022  f7fffffe          BL       GPIO_SetBits
;;;140    	Delay_us_SW(20);
000026  2014              MOVS     r0,#0x14
000028  f7fffffe          BL       Delay_us_SW
;;;141    	SCL_L();
00002c  2140              MOVS     r1,#0x40
00002e  4803              LDR      r0,|L2.60|
000030  f7fffffe          BL       GPIO_ResetBits
;;;142    	Delay_us_SW(20);
000034  2014              MOVS     r0,#0x14
000036  f7fffffe          BL       Delay_us_SW
;;;143    }
00003a  bd10              POP      {r4,pc}
;;;144    
                          ENDP

                  |L2.60|
                          DCD      0x40010c00

                          AREA ||i.I2C_NoAck||, CODE, READONLY, ALIGN=2

                  I2C_NoAck PROC
;;;145    /******************************************************************************/
;;;146    void I2C_NoAck(void)
000000  b510              PUSH     {r4,lr}
;;;147    {
;;;148    	SCL_L();
000002  2140              MOVS     r1,#0x40
000004  480d              LDR      r0,|L3.60|
000006  f7fffffe          BL       GPIO_ResetBits
;;;149    	Delay_us_SW(20);
00000a  2014              MOVS     r0,#0x14
00000c  f7fffffe          BL       Delay_us_SW
;;;150    	SDA_H();
000010  2180              MOVS     r1,#0x80
000012  480a              LDR      r0,|L3.60|
000014  f7fffffe          BL       GPIO_SetBits
;;;151    	Delay_us_SW(20);
000018  2014              MOVS     r0,#0x14
00001a  f7fffffe          BL       Delay_us_SW
;;;152    	SCL_H();
00001e  2140              MOVS     r1,#0x40
000020  4806              LDR      r0,|L3.60|
000022  f7fffffe          BL       GPIO_SetBits
;;;153    	Delay_us_SW(20);
000026  2014              MOVS     r0,#0x14
000028  f7fffffe          BL       Delay_us_SW
;;;154    	SCL_L();
00002c  2140              MOVS     r1,#0x40
00002e  4803              LDR      r0,|L3.60|
000030  f7fffffe          BL       GPIO_ResetBits
;;;155    	Delay_us_SW(20);
000034  2014              MOVS     r0,#0x14
000036  f7fffffe          BL       Delay_us_SW
;;;156    }
00003a  bd10              POP      {r4,pc}
;;;157    
                          ENDP

                  |L3.60|
                          DCD      0x40010c00

                          AREA ||i.IIC_ReadByte||, CODE, READONLY, ALIGN=2

                  IIC_ReadByte PROC
;;;108    /******************************************************************************/
;;;109    uint8 IIC_ReadByte(void)
000000  b570              PUSH     {r4-r6,lr}
;;;110    {
;;;111    	uint8 i,ReadByte;
;;;112    	SDA_H();
000002  2180              MOVS     r1,#0x80
000004  4812              LDR      r0,|L4.80|
000006  f7fffffe          BL       GPIO_SetBits
;;;113    	for(i = 0; i < 8; i++)
00000a  2500              MOVS     r5,#0
00000c  e01b              B        |L4.70|
                  |L4.14|
;;;114    	{
;;;115    		ReadByte <<= 1;
00000e  0660              LSLS     r0,r4,#25
000010  0e04              LSRS     r4,r0,#24
;;;116    		SCL_L();
000012  2140              MOVS     r1,#0x40
000014  480e              LDR      r0,|L4.80|
000016  f7fffffe          BL       GPIO_ResetBits
;;;117    		Delay_us_SW(20);
00001a  2014              MOVS     r0,#0x14
00001c  f7fffffe          BL       Delay_us_SW
;;;118    		SCL_H();
000020  2140              MOVS     r1,#0x40
000022  480b              LDR      r0,|L4.80|
000024  f7fffffe          BL       GPIO_SetBits
;;;119    		Delay_us_SW(20);
000028  2014              MOVS     r0,#0x14
00002a  f7fffffe          BL       Delay_us_SW
;;;120    		if(Read_SDA())
00002e  2180              MOVS     r1,#0x80
000030  4807              LDR      r0,|L4.80|
000032  f7fffffe          BL       GPIO_ReadInputDataBit
000036  b110              CBZ      r0,|L4.62|
;;;121    		{
;;;122    			ReadByte |= 0x01;
000038  f0440401          ORR      r4,r4,#1
00003c  e001              B        |L4.66|
                  |L4.62|
;;;123    		}
;;;124    		else
;;;125    		{
;;;126    			ReadByte &= ~(0x01);
00003e  f0240401          BIC      r4,r4,#1
                  |L4.66|
000042  1c68              ADDS     r0,r5,#1              ;113
000044  b2c5              UXTB     r5,r0                 ;113
                  |L4.70|
000046  2d08              CMP      r5,#8                 ;113
000048  dbe1              BLT      |L4.14|
;;;127    		}
;;;128    	}
;;;129    	return ReadByte;
00004a  4620              MOV      r0,r4
;;;130    }
00004c  bd70              POP      {r4-r6,pc}
;;;131    
                          ENDP

00004e  0000              DCW      0x0000
                  |L4.80|
                          DCD      0x40010c00

                          AREA ||i.IIC_Start||, CODE, READONLY, ALIGN=2

                  IIC_Start PROC
;;;37     /******************************************************************************/
;;;38     void IIC_Start(void)
000000  b510              PUSH     {r4,lr}
;;;39     {
;;;40     	SDA_H();
000002  2180              MOVS     r1,#0x80
000004  480c              LDR      r0,|L5.56|
000006  f7fffffe          BL       GPIO_SetBits
;;;41     	SCL_H();
00000a  2140              MOVS     r1,#0x40
00000c  480a              LDR      r0,|L5.56|
00000e  f7fffffe          BL       GPIO_SetBits
;;;42     	Delay_us_SW(20);
000012  2014              MOVS     r0,#0x14
000014  f7fffffe          BL       Delay_us_SW
;;;43     	SDA_L();
000018  2180              MOVS     r1,#0x80
00001a  4807              LDR      r0,|L5.56|
00001c  f7fffffe          BL       GPIO_ResetBits
;;;44     	Delay_us_SW(20);
000020  2014              MOVS     r0,#0x14
000022  f7fffffe          BL       Delay_us_SW
;;;45     	SDA_L();
000026  2180              MOVS     r1,#0x80
000028  4803              LDR      r0,|L5.56|
00002a  f7fffffe          BL       GPIO_ResetBits
;;;46     	Delay_us_SW(20);
00002e  2014              MOVS     r0,#0x14
000030  f7fffffe          BL       Delay_us_SW
;;;47     }
000034  bd10              POP      {r4,pc}
;;;48     
                          ENDP

000036  0000              DCW      0x0000
                  |L5.56|
                          DCD      0x40010c00

                          AREA ||i.IIC_Stop||, CODE, READONLY, ALIGN=2

                  IIC_Stop PROC
;;;49     /******************************************************************************/
;;;50     void IIC_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;51     {
;;;52     	SCL_L();
000002  2140              MOVS     r1,#0x40
000004  480d              LDR      r0,|L6.60|
000006  f7fffffe          BL       GPIO_ResetBits
;;;53     	Delay_us_SW(20);
00000a  2014              MOVS     r0,#0x14
00000c  f7fffffe          BL       Delay_us_SW
;;;54     	SDA_L();
000010  2180              MOVS     r1,#0x80
000012  480a              LDR      r0,|L6.60|
000014  f7fffffe          BL       GPIO_ResetBits
;;;55     	Delay_us_SW(20);
000018  2014              MOVS     r0,#0x14
00001a  f7fffffe          BL       Delay_us_SW
;;;56     	SCL_H();
00001e  2140              MOVS     r1,#0x40
000020  4806              LDR      r0,|L6.60|
000022  f7fffffe          BL       GPIO_SetBits
;;;57     	Delay_us_SW(20);
000026  2014              MOVS     r0,#0x14
000028  f7fffffe          BL       Delay_us_SW
;;;58     	SDA_H();
00002c  2180              MOVS     r1,#0x80
00002e  4803              LDR      r0,|L6.60|
000030  f7fffffe          BL       GPIO_SetBits
;;;59     	Delay_us_SW(20);
000034  2014              MOVS     r0,#0x14
000036  f7fffffe          BL       Delay_us_SW
;;;60     }
00003a  bd10              POP      {r4,pc}
;;;61     
                          ENDP

                  |L6.60|
                          DCD      0x40010c00

                          AREA ||i.IIC_WaitAck||, CODE, READONLY, ALIGN=2

                  IIC_WaitAck PROC
;;;62     /******************************************************************************/
;;;63     void IIC_WaitAck(void)
000000  b510              PUSH     {r4,lr}
;;;64     {
;;;65     	uint16 k;
;;;66     
;;;67     	SCL_L();
000002  2140              MOVS     r1,#0x40
000004  4812              LDR      r0,|L7.80|
000006  f7fffffe          BL       GPIO_ResetBits
;;;68     	SDA_H();
00000a  2180              MOVS     r1,#0x80
00000c  4810              LDR      r0,|L7.80|
00000e  f7fffffe          BL       GPIO_SetBits
;;;69     	Delay_us_SW(20);
000012  2014              MOVS     r0,#0x14
000014  f7fffffe          BL       Delay_us_SW
;;;70     	SCL_H();
000018  2140              MOVS     r1,#0x40
00001a  480d              LDR      r0,|L7.80|
00001c  f7fffffe          BL       GPIO_SetBits
;;;71     	k = 0;
000020  2400              MOVS     r4,#0
;;;72     
;;;73     	while((Read_SDA()!= 0) && (k < 60000))
000022  e001              B        |L7.40|
                  |L7.36|
;;;74     		k++;
000024  1c60              ADDS     r0,r4,#1
000026  b284              UXTH     r4,r0
                  |L7.40|
000028  2180              MOVS     r1,#0x80              ;73
00002a  4809              LDR      r0,|L7.80|
00002c  f7fffffe          BL       GPIO_ReadInputDataBit
000030  b118              CBZ      r0,|L7.58|
000032  f64e2060          MOV      r0,#0xea60            ;73
000036  4284              CMP      r4,r0                 ;73
000038  dbf4              BLT      |L7.36|
                  |L7.58|
;;;75     
;;;76     	Delay_us_SW(20);
00003a  2014              MOVS     r0,#0x14
00003c  f7fffffe          BL       Delay_us_SW
;;;77     	SCL_L();
000040  2140              MOVS     r1,#0x40
000042  4803              LDR      r0,|L7.80|
000044  f7fffffe          BL       GPIO_ResetBits
;;;78     	Delay_us_SW(20);
000048  2014              MOVS     r0,#0x14
00004a  f7fffffe          BL       Delay_us_SW
;;;79     }
00004e  bd10              POP      {r4,pc}
;;;80     
                          ENDP

                  |L7.80|
                          DCD      0x40010c00

                          AREA ||i.IIC_WriteByte||, CODE, READONLY, ALIGN=2

                  IIC_WriteByte PROC
;;;81     /******************************************************************************/
;;;82     void IIC_WriteByte(uint8 byte)
000000  b570              PUSH     {r4-r6,lr}
;;;83     {
000002  4604              MOV      r4,r0
;;;84     	uint8 i = 0;
000004  2500              MOVS     r5,#0
;;;85     
;;;86     	for(i = 0; i < 8; i++)
000006  bf00              NOP      
000008  e020              B        |L8.76|
                  |L8.10|
;;;87     	{
;;;88     		SCL_L();
00000a  2140              MOVS     r1,#0x40
00000c  4814              LDR      r0,|L8.96|
00000e  f7fffffe          BL       GPIO_ResetBits
;;;89     		Delay_us_SW(20);
000012  2014              MOVS     r0,#0x14
000014  f7fffffe          BL       Delay_us_SW
;;;90     		if(byte & 0x80)
000018  f0140f80          TST      r4,#0x80
00001c  d004              BEQ      |L8.40|
;;;91     		{
;;;92     			SDA_H();
00001e  2180              MOVS     r1,#0x80
000020  480f              LDR      r0,|L8.96|
000022  f7fffffe          BL       GPIO_SetBits
000026  e003              B        |L8.48|
                  |L8.40|
;;;93     		}
;;;94     		else
;;;95     		{
;;;96     			SDA_L();
000028  2180              MOVS     r1,#0x80
00002a  480d              LDR      r0,|L8.96|
00002c  f7fffffe          BL       GPIO_ResetBits
                  |L8.48|
;;;97     		}
;;;98     
;;;99     		Delay_us_SW(20);
000030  2014              MOVS     r0,#0x14
000032  f7fffffe          BL       Delay_us_SW
;;;100    		SCL_H();
000036  2140              MOVS     r1,#0x40
000038  4809              LDR      r0,|L8.96|
00003a  f7fffffe          BL       GPIO_SetBits
;;;101    		Delay_us_SW(20);
00003e  2014              MOVS     r0,#0x14
000040  f7fffffe          BL       Delay_us_SW
;;;102    		byte<<=1;
000044  0660              LSLS     r0,r4,#25
000046  0e04              LSRS     r4,r0,#24
000048  1c68              ADDS     r0,r5,#1              ;86
00004a  b2c5              UXTB     r5,r0                 ;86
                  |L8.76|
00004c  2d08              CMP      r5,#8                 ;86
00004e  dbdc              BLT      |L8.10|
;;;103    	}
;;;104    	SCL_L();
000050  2140              MOVS     r1,#0x40
000052  4803              LDR      r0,|L8.96|
000054  f7fffffe          BL       GPIO_ResetBits
;;;105    	Delay_us_SW(20);
000058  2014              MOVS     r0,#0x14
00005a  f7fffffe          BL       Delay_us_SW
;;;106    }
00005e  bd70              POP      {r4-r6,pc}
;;;107    
                          ENDP

                  |L8.96|
                          DCD      0x40010c00

                          AREA ||i.PCF8563_Init||, CODE, READONLY, ALIGN=2

                  PCF8563_Init PROC
;;;190    /******************************************************************************/
;;;191    void PCF8563_Init(void)
000000  b508              PUSH     {r3,lr}
;;;192    {
;;;193    	GPIO_InitTypeDef GPIO_InitStructure;
;;;194    
;;;195    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;196    
;;;197    	GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7;
00000a  20c0              MOVS     r0,#0xc0
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;198    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;199    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
000016  2014              MOVS     r0,#0x14
000018  f88d0003          STRB     r0,[sp,#3]
;;;200    	GPIO_Init(GPIOB, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4806              LDR      r0,|L9.56|
000020  f7fffffe          BL       GPIO_Init
;;;201    
;;;202    	SCL_H();
000024  2140              MOVS     r1,#0x40
000026  4804              LDR      r0,|L9.56|
000028  f7fffffe          BL       GPIO_SetBits
;;;203    	SDA_H();
00002c  2180              MOVS     r1,#0x80
00002e  4802              LDR      r0,|L9.56|
000030  f7fffffe          BL       GPIO_SetBits
;;;204    }
000034  bd08              POP      {r3,pc}
;;;205    
                          ENDP

000036  0000              DCW      0x0000
                  |L9.56|
                          DCD      0x40010c00

                          AREA ||i.PCF8563_ReaDAdress||, CODE, READONLY, ALIGN=1

                  PCF8563_ReaDAdress PROC
;;;158    /******************************************************************************/
;;;159    uint8 PCF8563_ReaDAdress(uint8 Adress)
000000  b570              PUSH     {r4-r6,lr}
;;;160    {
000002  4604              MOV      r4,r0
;;;161    	uint8 ReadData;
;;;162    
;;;163    	IIC_Start();
000004  f7fffffe          BL       IIC_Start
;;;164    	IIC_WriteByte(0xa2);
000008  20a2              MOVS     r0,#0xa2
00000a  f7fffffe          BL       IIC_WriteByte
;;;165    	IIC_WaitAck();
00000e  f7fffffe          BL       IIC_WaitAck
;;;166    	IIC_WriteByte(Adress);
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       IIC_WriteByte
;;;167    	IIC_WaitAck();
000018  f7fffffe          BL       IIC_WaitAck
;;;168    	IIC_Start();
00001c  f7fffffe          BL       IIC_Start
;;;169    	IIC_WriteByte(0xa3);
000020  20a3              MOVS     r0,#0xa3
000022  f7fffffe          BL       IIC_WriteByte
;;;170    	IIC_WaitAck();
000026  f7fffffe          BL       IIC_WaitAck
;;;171    	ReadData = IIC_ReadByte();
00002a  f7fffffe          BL       IIC_ReadByte
00002e  4605              MOV      r5,r0
;;;172    	IIC_Stop();
000030  f7fffffe          BL       IIC_Stop
;;;173    
;;;174    	return ReadData;
000034  4628              MOV      r0,r5
;;;175    }
000036  bd70              POP      {r4-r6,pc}
;;;176    
                          ENDP


                          AREA ||i.PCF8563_Read||, CODE, READONLY, ALIGN=1

                  PCF8563_Read PROC
;;;237    /******************************************************************************/
;;;238    void PCF8563_Read(RTC_DATA *currTime)
000000  b51c              PUSH     {r2-r4,lr}
;;;239    {
000002  4604              MOV      r4,r0
;;;240    	uint8 PCF8563_Time[7] = {0};
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
000008  9001              STR      r0,[sp,#4]
;;;241    
;;;242    	IIC_Start();
00000a  f7fffffe          BL       IIC_Start
;;;243    	IIC_WriteByte(0xa2);
00000e  20a2              MOVS     r0,#0xa2
000010  f7fffffe          BL       IIC_WriteByte
;;;244    	IIC_WaitAck();
000014  f7fffffe          BL       IIC_WaitAck
;;;245    	IIC_WriteByte(0x02);
000018  2002              MOVS     r0,#2
00001a  f7fffffe          BL       IIC_WriteByte
;;;246    	IIC_WaitAck();
00001e  f7fffffe          BL       IIC_WaitAck
;;;247    	IIC_Start();
000022  f7fffffe          BL       IIC_Start
;;;248    	IIC_WriteByte(0xa3);
000026  20a3              MOVS     r0,#0xa3
000028  f7fffffe          BL       IIC_WriteByte
;;;249    	IIC_WaitAck();
00002c  f7fffffe          BL       IIC_WaitAck
;;;250    
;;;251    	/* Read time */
;;;252    	PCF8563_Time[0] = IIC_ReadByte()&0x7f;
000030  f7fffffe          BL       IIC_ReadByte
000034  f000007f          AND      r0,r0,#0x7f
000038  f88d0000          STRB     r0,[sp,#0]
;;;253    	I2C_Ack();
00003c  f7fffffe          BL       I2C_Ack
;;;254    	PCF8563_Time[1] = IIC_ReadByte()&0x7f;
000040  f7fffffe          BL       IIC_ReadByte
000044  f000007f          AND      r0,r0,#0x7f
000048  f88d0001          STRB     r0,[sp,#1]
;;;255    	I2C_Ack();
00004c  f7fffffe          BL       I2C_Ack
;;;256    	PCF8563_Time[2] = IIC_ReadByte()&0x3f;
000050  f7fffffe          BL       IIC_ReadByte
000054  f000003f          AND      r0,r0,#0x3f
000058  f88d0002          STRB     r0,[sp,#2]
;;;257    	I2C_Ack();
00005c  f7fffffe          BL       I2C_Ack
;;;258    	PCF8563_Time[3] = IIC_ReadByte()&0x3f;
000060  f7fffffe          BL       IIC_ReadByte
000064  f000003f          AND      r0,r0,#0x3f
000068  f88d0003          STRB     r0,[sp,#3]
;;;259    	I2C_Ack();
00006c  f7fffffe          BL       I2C_Ack
;;;260    	PCF8563_Time[4] = IIC_ReadByte()&0x07;
000070  f7fffffe          BL       IIC_ReadByte
000074  f0000007          AND      r0,r0,#7
000078  f88d0004          STRB     r0,[sp,#4]
;;;261    	I2C_Ack();
00007c  f7fffffe          BL       I2C_Ack
;;;262    	PCF8563_Time[5] = IIC_ReadByte()&0x1f;
000080  f7fffffe          BL       IIC_ReadByte
000084  f000001f          AND      r0,r0,#0x1f
000088  f88d0005          STRB     r0,[sp,#5]
;;;263    	I2C_Ack();
00008c  f7fffffe          BL       I2C_Ack
;;;264    	PCF8563_Time[6] = IIC_ReadByte();
000090  f7fffffe          BL       IIC_ReadByte
000094  f88d0006          STRB     r0,[sp,#6]
;;;265    	I2C_NoAck();
000098  f7fffffe          BL       I2C_NoAck
;;;266    	IIC_Stop();
00009c  f7fffffe          BL       IIC_Stop
;;;267    
;;;268    	currTime->sec = ((PCF8563_Time[0]&0xf0)>>4)*10 + (PCF8563_Time[0]&0x0f);
0000a0  f89d0000          LDRB     r0,[sp,#0]
0000a4  f000000f          AND      r0,r0,#0xf
0000a8  f89d1000          LDRB     r1,[sp,#0]
0000ac  0909              LSRS     r1,r1,#4
0000ae  eb010181          ADD      r1,r1,r1,LSL #2
0000b2  eb000041          ADD      r0,r0,r1,LSL #1
0000b6  71a0              STRB     r0,[r4,#6]
;;;269    	currTime->min = ((PCF8563_Time[1]&0xf0)>>4)*10 + (PCF8563_Time[1]&0x0f);
0000b8  f89d0001          LDRB     r0,[sp,#1]
0000bc  f000000f          AND      r0,r0,#0xf
0000c0  f89d1001          LDRB     r1,[sp,#1]
0000c4  0909              LSRS     r1,r1,#4
0000c6  eb010181          ADD      r1,r1,r1,LSL #2
0000ca  eb000041          ADD      r0,r0,r1,LSL #1
0000ce  7160              STRB     r0,[r4,#5]
;;;270    	currTime->hour =((PCF8563_Time[2]&0xf0)>>4)*10 + (PCF8563_Time[2]&0x0f);
0000d0  f89d0002          LDRB     r0,[sp,#2]
0000d4  f000000f          AND      r0,r0,#0xf
0000d8  f89d1002          LDRB     r1,[sp,#2]
0000dc  0909              LSRS     r1,r1,#4
0000de  eb010181          ADD      r1,r1,r1,LSL #2
0000e2  eb000041          ADD      r0,r0,r1,LSL #1
0000e6  7120              STRB     r0,[r4,#4]
;;;271    	currTime->day = ((PCF8563_Time[3]&0xf0)>>4)*10 + (PCF8563_Time[3]&0x0f);
0000e8  f89d0003          LDRB     r0,[sp,#3]
0000ec  f000000f          AND      r0,r0,#0xf
0000f0  f89d1003          LDRB     r1,[sp,#3]
0000f4  0909              LSRS     r1,r1,#4
0000f6  eb010181          ADD      r1,r1,r1,LSL #2
0000fa  eb000041          ADD      r0,r0,r1,LSL #1
0000fe  70e0              STRB     r0,[r4,#3]
;;;272    //	((PCF8563_Time[4]&0xf0)>>4)*10 + (PCF8563_Time[4]&0x0f);
;;;273    	currTime->month = ((PCF8563_Time[5]&0xf0)>>4)*10 + (PCF8563_Time[5]&0x0f);
000100  f89d0005          LDRB     r0,[sp,#5]
000104  f000000f          AND      r0,r0,#0xf
000108  f89d1005          LDRB     r1,[sp,#5]
00010c  0909              LSRS     r1,r1,#4
00010e  eb010181          ADD      r1,r1,r1,LSL #2
000112  eb000041          ADD      r0,r0,r1,LSL #1
000116  70a0              STRB     r0,[r4,#2]
;;;274    	currTime->year = 2000 + ((PCF8563_Time[6]&0xf0)>>4)*10 + (PCF8563_Time[6]&0x0f);
000118  f89d0006          LDRB     r0,[sp,#6]
00011c  0900              LSRS     r0,r0,#4
00011e  eb000080          ADD      r0,r0,r0,LSL #2
000122  f44f61fa          MOV      r1,#0x7d0
000126  eb010040          ADD      r0,r1,r0,LSL #1
00012a  f89d1006          LDRB     r1,[sp,#6]
00012e  f001010f          AND      r1,r1,#0xf
000132  4408              ADD      r0,r0,r1
000134  8020              STRH     r0,[r4,#0]
;;;275    }
000136  bd1c              POP      {r2-r4,pc}
;;;276    
                          ENDP


                          AREA ||i.PCF8563_Set||, CODE, READONLY, ALIGN=1

                  PCF8563_Set PROC
;;;206    /******************************************************************************/
;;;207    void PCF8563_Set(uint16 syear, uint8 smon, uint8 sday, uint8 hour,
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;208    		uint8 min, uint8 sec, uint8 week)
;;;209    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9dd9a0b          LDRD     r9,r10,[sp,#0x2c]
000010  f8dd8028          LDR      r8,[sp,#0x28]
;;;210    	uint8 PCF8563_Time[7] = {0};
000014  2000              MOVS     r0,#0
000016  9000              STR      r0,[sp,#0]
000018  9001              STR      r0,[sp,#4]
;;;211    
;;;212    	/* Convert to BCD */
;;;213    	PCF8563_Time[0] = ((sec/10) << 4) | (sec%10);
00001a  200a              MOVS     r0,#0xa
00001c  fb99f1f0          SDIV     r1,r9,r0
000020  fb009011          MLS      r0,r0,r1,r9
000024  210a              MOVS     r1,#0xa
000026  fb99f1f1          SDIV     r1,r9,r1
00002a  ea401001          ORR      r0,r0,r1,LSL #4
00002e  b2c0              UXTB     r0,r0
000030  f88d0000          STRB     r0,[sp,#0]
;;;214    	PCF8563_Time[1] = ((min/10) << 4) | (min%10);
000034  200a              MOVS     r0,#0xa
000036  fb98f1f0          SDIV     r1,r8,r0
00003a  fb008011          MLS      r0,r0,r1,r8
00003e  210a              MOVS     r1,#0xa
000040  fb98f1f1          SDIV     r1,r8,r1
000044  ea401001          ORR      r0,r0,r1,LSL #4
000048  b2c0              UXTB     r0,r0
00004a  f88d0001          STRB     r0,[sp,#1]
;;;215    	PCF8563_Time[2] = ((hour/10) << 4) | (hour%10);
00004e  200a              MOVS     r0,#0xa
000050  fb97f1f0          SDIV     r1,r7,r0
000054  fb007011          MLS      r0,r0,r1,r7
000058  210a              MOVS     r1,#0xa
00005a  fb97f1f1          SDIV     r1,r7,r1
00005e  ea401001          ORR      r0,r0,r1,LSL #4
000062  b2c0              UXTB     r0,r0
000064  f88d0002          STRB     r0,[sp,#2]
;;;216    	PCF8563_Time[3] = ((sday/10) << 4) | (sday%10);
000068  200a              MOVS     r0,#0xa
00006a  fb96f1f0          SDIV     r1,r6,r0
00006e  fb006011          MLS      r0,r0,r1,r6
000072  210a              MOVS     r1,#0xa
000074  fb96f1f1          SDIV     r1,r6,r1
000078  ea401001          ORR      r0,r0,r1,LSL #4
00007c  b2c0              UXTB     r0,r0
00007e  f88d0003          STRB     r0,[sp,#3]
;;;217    	PCF8563_Time[4] = ((week/10) << 4) | (week%10);
000082  200a              MOVS     r0,#0xa
000084  fb9af1f0          SDIV     r1,r10,r0
000088  fb00a011          MLS      r0,r0,r1,r10
00008c  210a              MOVS     r1,#0xa
00008e  fb9af1f1          SDIV     r1,r10,r1
000092  ea401001          ORR      r0,r0,r1,LSL #4
000096  b2c0              UXTB     r0,r0
000098  f88d0004          STRB     r0,[sp,#4]
;;;218    	PCF8563_Time[5] = ((smon/10) << 4) | (smon%10);
00009c  200a              MOVS     r0,#0xa
00009e  fb95f1f0          SDIV     r1,r5,r0
0000a2  fb005011          MLS      r0,r0,r1,r5
0000a6  210a              MOVS     r1,#0xa
0000a8  fb95f1f1          SDIV     r1,r5,r1
0000ac  ea401001          ORR      r0,r0,r1,LSL #4
0000b0  b2c0              UXTB     r0,r0
0000b2  f88d0005          STRB     r0,[sp,#5]
;;;219    	PCF8563_Time[6] = (((syear%2000)/10 << 4)) | ((syear%2000)%10);
0000b6  f44f60fa          MOV      r0,#0x7d0
0000ba  fb94f1f0          SDIV     r1,r4,r0
0000be  fb004011          MLS      r0,r0,r1,r4
0000c2  210a              MOVS     r1,#0xa
0000c4  fb90f2f1          SDIV     r2,r0,r1
0000c8  fb010012          MLS      r0,r1,r2,r0
0000cc  f44f61fa          MOV      r1,#0x7d0
0000d0  fb94f2f1          SDIV     r2,r4,r1
0000d4  fb014112          MLS      r1,r1,r2,r4
0000d8  220a              MOVS     r2,#0xa
0000da  fb91f1f2          SDIV     r1,r1,r2
0000de  ea401001          ORR      r0,r0,r1,LSL #4
0000e2  b2c0              UXTB     r0,r0
0000e4  f88d0006          STRB     r0,[sp,#6]
;;;220    
;;;221    	//Disable RTC source clock
;;;222    	PCF8563_WriteAdress(0x00, 0x20);
0000e8  2120              MOVS     r1,#0x20
0000ea  2000              MOVS     r0,#0
0000ec  f7fffffe          BL       PCF8563_WriteAdress
;;;223    
;;;224    	//Set time
;;;225    	PCF8563_WriteAdress(0x02, PCF8563_Time[0]);
0000f0  f89d1000          LDRB     r1,[sp,#0]
0000f4  2002              MOVS     r0,#2
0000f6  f7fffffe          BL       PCF8563_WriteAdress
;;;226    	PCF8563_WriteAdress(0x03, PCF8563_Time[1]);
0000fa  f89d1001          LDRB     r1,[sp,#1]
0000fe  2003              MOVS     r0,#3
000100  f7fffffe          BL       PCF8563_WriteAdress
;;;227    	PCF8563_WriteAdress(0x04, PCF8563_Time[2]);
000104  f89d1002          LDRB     r1,[sp,#2]
000108  2004              MOVS     r0,#4
00010a  f7fffffe          BL       PCF8563_WriteAdress
;;;228    	PCF8563_WriteAdress(0x05, PCF8563_Time[3]);
00010e  f89d1003          LDRB     r1,[sp,#3]
000112  2005              MOVS     r0,#5
000114  f7fffffe          BL       PCF8563_WriteAdress
;;;229    	PCF8563_WriteAdress(0x06, PCF8563_Time[4]);
000118  f89d1004          LDRB     r1,[sp,#4]
00011c  2006              MOVS     r0,#6
00011e  f7fffffe          BL       PCF8563_WriteAdress
;;;230    	PCF8563_WriteAdress(0x07, PCF8563_Time[5]);
000122  f89d1005          LDRB     r1,[sp,#5]
000126  2007              MOVS     r0,#7
000128  f7fffffe          BL       PCF8563_WriteAdress
;;;231    	PCF8563_WriteAdress(0x08, PCF8563_Time[6]);
00012c  f89d1006          LDRB     r1,[sp,#6]
000130  2008              MOVS     r0,#8
000132  f7fffffe          BL       PCF8563_WriteAdress
;;;232    
;;;233    	//Enable RTC sorce clock
;;;234    	PCF8563_WriteAdress(0x00, 0x00);
000136  2100              MOVS     r1,#0
000138  4608              MOV      r0,r1
00013a  f7fffffe          BL       PCF8563_WriteAdress
;;;235    }
00013e  e8bd87fc          POP      {r2-r10,pc}
;;;236    
                          ENDP


                          AREA ||i.PCF8563_WriteAdress||, CODE, READONLY, ALIGN=1

                  PCF8563_WriteAdress PROC
;;;177    /******************************************************************************/
;;;178    void  PCF8563_WriteAdress(uint8 Adress,uint8 DataTX)
000000  b570              PUSH     {r4-r6,lr}
;;;179    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;180    	IIC_Start();
000006  f7fffffe          BL       IIC_Start
;;;181    	IIC_WriteByte(0xa2);
00000a  20a2              MOVS     r0,#0xa2
00000c  f7fffffe          BL       IIC_WriteByte
;;;182    	IIC_WaitAck();
000010  f7fffffe          BL       IIC_WaitAck
;;;183    	IIC_WriteByte(Adress);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       IIC_WriteByte
;;;184    	IIC_WaitAck();
00001a  f7fffffe          BL       IIC_WaitAck
;;;185    	IIC_WriteByte(DataTX);
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       IIC_WriteByte
;;;186    	IIC_WaitAck();
000024  f7fffffe          BL       IIC_WaitAck
;;;187    	IIC_Stop();
000028  f7fffffe          BL       IIC_Stop
;;;188    }
00002c  bd70              POP      {r4-r6,pc}
;;;189    
                          ENDP


                          AREA ||i.SystemManage_RTC_Get||, CODE, READONLY, ALIGN=2

                  SystemManage_RTC_Get PROC
;;;291    /******************************************************************************/
;;;292    uint8 SystemManage_RTC_Get(void)
000000  b510              PUSH     {r4,lr}
;;;293    {
;;;294    	PCF8563_Read(&SystemManage_CurrentTime);
000002  4802              LDR      r0,|L14.12|
000004  f7fffffe          BL       PCF8563_Read
;;;295    	return 0;
000008  2000              MOVS     r0,#0
;;;296    }
00000a  bd10              POP      {r4,pc}
                          ENDP

                  |L14.12|
                          DCD      SystemManage_CurrentTime

                          AREA ||i.SystemManage_RTC_Set||, CODE, READONLY, ALIGN=1

                  SystemManage_RTC_Set PROC
;;;277    /******************************************************************************/
;;;278    uint8 SystemManage_RTC_Set(uint16 syear, uint8 smon, uint8 sday, uint8 hour,
000000  e92d4ffe          PUSH     {r1-r11,lr}
;;;279    		uint8 min,uint8 sec)
;;;280    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9dd890c          LDRD     r8,r9,[sp,#0x30]
;;;281    	uint8 week = 0;
000010  f04f0a00          MOV      r10,#0
;;;282    
;;;283    //	/* Calculate week */
;;;284    //	week = RTC_Get_Week(syear, smon, sday);
;;;285    	/* Set PCF8563 */
;;;286    	PCF8563_Set(syear, smon, sday, hour, min, sec, week);
000014  463b              MOV      r3,r7
000016  4632              MOV      r2,r6
000018  4629              MOV      r1,r5
00001a  4620              MOV      r0,r4
00001c  e88d0700          STM      sp,{r8-r10}
000020  f7fffffe          BL       PCF8563_Set
;;;287    
;;;288    	return 0;
000024  2000              MOVS     r0,#0
;;;289    }
000026  e8bd8ffe          POP      {r1-r11,pc}
;;;290    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=1

                  SystemManage_SetTime
000000  07e2              DCW      0x07e2
000002  030c              DCB      0x03,0x0c
000004  10080000          DCB      0x10,0x08,0x00,0x00
                  SystemManage_CurrentTime
                          %        8

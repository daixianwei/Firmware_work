; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output_App\font.o --asm_dir=..\Output_App\ --list_dir=..\Output_App\ --depend=..\Output_App\font.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I.\System\CM3 -I.\System\FWlib\inc -I.\System\Startup -I.\ISR -I.\Main -I.\Management\DisplayDriver -I.\Management\HumanInput -I.\Management\Interface -I.\Management\RotationMotor -I.\Management\ScanMotor -I.\Management\Common_CRC -I.\Management\QRCode -I.\Management\SystemManage_RTC -I.\Management\SignalProcess_Sample -I.\USB -I.\USB\comm -I.\USB\lib -I.\USB\src -I.\USB\USB_Communication -ID:\Keil4.0\ARM\RV31\Inc -ID:\Keil4.0\ARM\CMSIS\Include -ID:\Keil4.0\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL -W --omf_browse=..\Output_App\font.crf Management\DisplayDriver\Font.c]
                          THUMB

                          AREA ||i.DisplayDriver_Clear||, CODE, READONLY, ALIGN=1

                  DisplayDriver_Clear PROC
;;;168    
;;;169    void DisplayDriver_Clear(u16 xStart,u16 yStart,u16 xLong,u16 yLong,u16 Color)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;170    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  f8dd8020          LDR      r8,[sp,#0x20]
;;;171    	BlockWrite(0,127,0,159);
000010  239f              MOVS     r3,#0x9f
000012  2200              MOVS     r2,#0
000014  217f              MOVS     r1,#0x7f
000016  4610              MOV      r0,r2
000018  f7fffffe          BL       BlockWrite
;;;172    	Lcd_ColorBox(xStart,yStart,xLong,yLong,Color);
00001c  463b              MOV      r3,r7
00001e  4632              MOV      r2,r6
000020  4629              MOV      r1,r5
000022  4620              MOV      r0,r4
000024  f8cd8000          STR      r8,[sp,#0]
000028  f7fffffe          BL       Lcd_ColorBox
;;;173    }
00002c  e8bd83f8          POP      {r3-r9,pc}
;;;174    
                          ENDP


                          AREA ||i.DisplayDriver_DrawLine||, CODE, READONLY, ALIGN=1

                  DisplayDriver_DrawLine PROC
;;;194    *******************************************************************************/
;;;195    void DisplayDriver_DrawLine(u16 start_x, u16 start_y, u16 end_x, u16 end_y, u16 color)
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;196    {
000004  b083              SUB      sp,sp,#0xc
000006  4681              MOV      r9,r0
;;;197    	u16 t;
;;;198    	int xerr=0,yerr=0,delta_x,delta_y,distance;
000008  f04f0a00          MOV      r10,#0
00000c  46d3              MOV      r11,r10
;;;199    	int incx,incy,uRow,uCol;
;;;200    	BlockWrite(0,127,0,159);
00000e  239f              MOVS     r3,#0x9f
000010  2200              MOVS     r2,#0
000012  217f              MOVS     r1,#0x7f
000014  4610              MOV      r0,r2
000016  f7fffffe          BL       BlockWrite
;;;201    	delta_x=end_x-start_x;
00001a  9805              LDR      r0,[sp,#0x14]
00001c  eba00509          SUB      r5,r0,r9
;;;202    	delta_y=end_y-start_y;
000020  9904              LDR      r1,[sp,#0x10]
000022  9806              LDR      r0,[sp,#0x18]
000024  1a46              SUBS     r6,r0,r1
;;;203    	uRow=start_x;
000026  f8cd9004          STR      r9,[sp,#4]
;;;204    	uCol=start_y;
00002a  9804              LDR      r0,[sp,#0x10]
00002c  9000              STR      r0,[sp,#0]
;;;205    	if(delta_x>0)incx=1;
00002e  2d00              CMP      r5,#0
000030  dd01              BLE      |L2.54|
000032  2701              MOVS     r7,#1
000034  e005              B        |L2.66|
                  |L2.54|
;;;206    	else if(delta_x==0)incx=0;
000036  b90d              CBNZ     r5,|L2.60|
000038  2700              MOVS     r7,#0
00003a  e002              B        |L2.66|
                  |L2.60|
;;;207    	else {incx=-1;delta_x=-delta_x;}
00003c  f04f37ff          MOV      r7,#0xffffffff
000040  426d              RSBS     r5,r5,#0
                  |L2.66|
;;;208    	if(delta_y>0)incy=1;
000042  2e00              CMP      r6,#0
000044  dd02              BLE      |L2.76|
000046  f04f0801          MOV      r8,#1
00004a  e006              B        |L2.90|
                  |L2.76|
;;;209    	else if(delta_y==0)incy=0;
00004c  b916              CBNZ     r6,|L2.84|
00004e  f04f0800          MOV      r8,#0
000052  e002              B        |L2.90|
                  |L2.84|
;;;210    	else{incy=-1;delta_y=-delta_y;}
000054  f04f38ff          MOV      r8,#0xffffffff
000058  4276              RSBS     r6,r6,#0
                  |L2.90|
;;;211    	if( delta_x>delta_y)distance=delta_x;
00005a  42b5              CMP      r5,r6
00005c  dd01              BLE      |L2.98|
00005e  462c              MOV      r4,r5
000060  e000              B        |L2.100|
                  |L2.98|
;;;212    	else distance=delta_y;
000062  4634              MOV      r4,r6
                  |L2.100|
;;;213    	for(t=0;t<=distance+1;t++ )
000064  2000              MOVS     r0,#0
000066  9002              STR      r0,[sp,#8]
000068  e01a              B        |L2.160|
                  |L2.106|
;;;214    	{
;;;215    		Lcd_ColorSpot(uRow,uCol, color);
00006a  9800              LDR      r0,[sp,#0]
00006c  b281              UXTH     r1,r0
00006e  9801              LDR      r0,[sp,#4]
000070  b280              UXTH     r0,r0
000072  9a10              LDR      r2,[sp,#0x40]
000074  f7fffffe          BL       Lcd_ColorSpot
;;;216    		xerr+=delta_x ;
000078  44aa              ADD      r10,r10,r5
;;;217    		yerr+=delta_y ;
00007a  44b3              ADD      r11,r11,r6
;;;218    		if(xerr>distance)
00007c  45a2              CMP      r10,r4
00007e  dd04              BLE      |L2.138|
;;;219    		{
;;;220    			xerr-=distance;
000080  ebaa0a04          SUB      r10,r10,r4
;;;221    			uRow+=incx;
000084  9801              LDR      r0,[sp,#4]
000086  4438              ADD      r0,r0,r7
000088  9001              STR      r0,[sp,#4]
                  |L2.138|
;;;222    		}
;;;223    		if(yerr>distance)
00008a  45a3              CMP      r11,r4
00008c  dd04              BLE      |L2.152|
;;;224    		{
;;;225    			yerr-=distance;
00008e  ebab0b04          SUB      r11,r11,r4
;;;226    			uCol+=incy;
000092  9800              LDR      r0,[sp,#0]
000094  4440              ADD      r0,r0,r8
000096  9000              STR      r0,[sp,#0]
                  |L2.152|
000098  9802              LDR      r0,[sp,#8]            ;213
00009a  1c40              ADDS     r0,r0,#1              ;213
00009c  b280              UXTH     r0,r0                 ;213
00009e  9002              STR      r0,[sp,#8]            ;213
                  |L2.160|
0000a0  1c61              ADDS     r1,r4,#1              ;213
0000a2  9802              LDR      r0,[sp,#8]            ;213
0000a4  4288              CMP      r0,r1                 ;213
0000a6  dde0              BLE      |L2.106|
;;;227    		}
;;;228    	}
;;;229    }
0000a8  b007              ADD      sp,sp,#0x1c
0000aa  e8bd8ff0          POP      {r4-r11,pc}
                          ENDP


                          AREA ||i.DisplayDriver_Text16||, CODE, READONLY, ALIGN=2

                  DisplayDriver_Text16 PROC
;;;26     *******************************************************************************/
;;;27     void DisplayDriver_Text16(unsigned int x, unsigned int y, unsigned int Color,u8 *s)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;28     {
000004  4680              MOV      r8,r0
000006  4689              MOV      r9,r1
000008  4692              MOV      r10,r2
00000a  461f              MOV      r7,r3
;;;29     	unsigned char i,j;
;;;30     	unsigned int k;
;;;31     	BlockWrite(0,127,0,159);
00000c  239f              MOVS     r3,#0x9f
00000e  2200              MOVS     r2,#0
000010  217f              MOVS     r1,#0x7f
000012  4610              MOV      r0,r2
000014  f7fffffe          BL       BlockWrite
;;;32         if(*s != '\0')
000018  7838              LDRB     r0,[r7,#0]
00001a  2800              CMP      r0,#0
00001c  d07e              BEQ      |L3.284|
;;;33     	{
;;;34     		while(*s)
00001e  e089              B        |L3.308|
                  |L3.32|
;;;35     		{
;;;36     			if( *s < 0x80 )
000020  7838              LDRB     r0,[r7,#0]
000022  2880              CMP      r0,#0x80
000024  da27              BGE      |L3.118|
;;;37     			{
;;;38     				k=*s;
000026  783e              LDRB     r6,[r7,#0]
;;;39     				if (k>32)
000028  2e20              CMP      r6,#0x20
00002a  d901              BLS      |L3.48|
;;;40     					k-=32;
00002c  3e20              SUBS     r6,r6,#0x20
00002e  e000              B        |L3.50|
                  |L3.48|
;;;41     				else
;;;42     					k=0;
000030  2600              MOVS     r6,#0
                  |L3.50|
;;;43     
;;;44     				for(i=0;i<16;i++)
000032  2400              MOVS     r4,#0
000034  e019              B        |L3.106|
                  |L3.54|
;;;45     					for(j=0;j<8;j++)
000036  2500              MOVS     r5,#0
000038  e013              B        |L3.98|
                  |L3.58|
;;;46     					{
;;;47     						if(asc16[k*16+i]&(0x80>>j))
00003a  eb041006          ADD      r0,r4,r6,LSL #4
00003e  4940              LDR      r1,|L3.320|
000040  5c09              LDRB     r1,[r1,r0]
000042  2080              MOVS     r0,#0x80
000044  4128              ASRS     r0,r0,r5
000046  4201              TST      r1,r0
000048  d009              BEQ      |L3.94|
;;;48     							Lcd_ColorSpot(x+j,y+i,Color);
00004a  eb090204          ADD      r2,r9,r4
00004e  b291              UXTH     r1,r2
000050  eb080205          ADD      r2,r8,r5
000054  b290              UXTH     r0,r2
000056  fa1ff28a          UXTH     r2,r10
00005a  f7fffffe          BL       Lcd_ColorSpot
                  |L3.94|
00005e  1c68              ADDS     r0,r5,#1              ;45
000060  b2c5              UXTB     r5,r0                 ;45
                  |L3.98|
000062  2d08              CMP      r5,#8                 ;45
000064  dbe9              BLT      |L3.58|
000066  1c60              ADDS     r0,r4,#1              ;44
000068  b2c4              UXTB     r4,r0                 ;44
                  |L3.106|
00006a  2c10              CMP      r4,#0x10              ;44
00006c  dbe3              BLT      |L3.54|
;;;49     					}
;;;50     				s++;x+=8;
00006e  1c7f              ADDS     r7,r7,#1
000070  f1080808          ADD      r8,r8,#8
000074  e05e              B        |L3.308|
                  |L3.118|
;;;51     			}
;;;52     			else
;;;53     			{
;;;54     				for (k=0;k<HZ16_NUM;k++)
000076  2600              MOVS     r6,#0
000078  e055              B        |L3.294|
                  |L3.122|
;;;55     				{
;;;56     					if ((hz16[k].Index[0]==*(s))&&(hz16[k].Index[1]==*(s+1)))
00007a  eb061006          ADD      r0,r6,r6,LSL #4
00007e  4931              LDR      r1,|L3.324|
000080  f8110010          LDRB     r0,[r1,r0,LSL #1]
000084  7839              LDRB     r1,[r7,#0]
000086  4288              CMP      r0,r1
000088  d14c              BNE      |L3.292|
00008a  eb061006          ADD      r0,r6,r6,LSL #4
00008e  492d              LDR      r1,|L3.324|
000090  eb010040          ADD      r0,r1,r0,LSL #1
000094  7840              LDRB     r0,[r0,#1]
000096  7879              LDRB     r1,[r7,#1]
000098  4288              CMP      r0,r1
00009a  d143              BNE      |L3.292|
;;;57     					{
;;;58     						for(i=0;i<16;i++)
00009c  2400              MOVS     r4,#0
00009e  e03c              B        |L3.282|
                  |L3.160|
;;;59     						{
;;;60     							for(j=0;j<8;j++)
0000a0  2500              MOVS     r5,#0
0000a2  e017              B        |L3.212|
                  |L3.164|
;;;61     							{
;;;62     								if(hz16[k].Msk[i*2]&(0x80>>j))
0000a4  eb061006          ADD      r0,r6,r6,LSL #4
0000a8  4926              LDR      r1,|L3.324|
0000aa  eb010040          ADD      r0,r1,r0,LSL #1
0000ae  1c80              ADDS     r0,r0,#2
0000b0  f8100014          LDRB     r0,[r0,r4,LSL #1]
0000b4  2180              MOVS     r1,#0x80
0000b6  4129              ASRS     r1,r1,r5
0000b8  4208              TST      r0,r1
0000ba  d009              BEQ      |L3.208|
;;;63     									Lcd_ColorSpot(x+j,y+i,Color);
0000bc  eb090204          ADD      r2,r9,r4
0000c0  b291              UXTH     r1,r2
0000c2  eb080205          ADD      r2,r8,r5
0000c6  b290              UXTH     r0,r2
0000c8  fa1ff28a          UXTH     r2,r10
0000cc  f7fffffe          BL       Lcd_ColorSpot
                  |L3.208|
0000d0  1c68              ADDS     r0,r5,#1              ;60
0000d2  b2c5              UXTB     r5,r0                 ;60
                  |L3.212|
0000d4  2d08              CMP      r5,#8                 ;60
0000d6  dbe5              BLT      |L3.164|
;;;64     							}
;;;65     							for(j=0;j<8;j++)
0000d8  2500              MOVS     r5,#0
0000da  e01a              B        |L3.274|
                  |L3.220|
;;;66     							{
;;;67     								if(hz16[k].Msk[i*2+1]&(0x80>>j))
0000dc  eb061006          ADD      r0,r6,r6,LSL #4
0000e0  4918              LDR      r1,|L3.324|
0000e2  eb010040          ADD      r0,r1,r0,LSL #1
0000e6  1c80              ADDS     r0,r0,#2
0000e8  2101              MOVS     r1,#1
0000ea  eb010144          ADD      r1,r1,r4,LSL #1
0000ee  5c40              LDRB     r0,[r0,r1]
0000f0  2180              MOVS     r1,#0x80
0000f2  4129              ASRS     r1,r1,r5
0000f4  4208              TST      r0,r1
0000f6  d00a              BEQ      |L3.270|
;;;68     									Lcd_ColorSpot(x+j+8,y+i,Color);
0000f8  eb090204          ADD      r2,r9,r4
0000fc  b291              UXTH     r1,r2
0000fe  eb080205          ADD      r2,r8,r5
000102  3208              ADDS     r2,r2,#8
000104  b290              UXTH     r0,r2
000106  fa1ff28a          UXTH     r2,r10
00010a  f7fffffe          BL       Lcd_ColorSpot
                  |L3.270|
00010e  1c68              ADDS     r0,r5,#1              ;65
000110  b2c5              UXTB     r5,r0                 ;65
                  |L3.274|
000112  2d08              CMP      r5,#8                 ;65
000114  dbe2              BLT      |L3.220|
000116  1c60              ADDS     r0,r4,#1              ;58
000118  b2c4              UXTB     r4,r0                 ;58
                  |L3.282|
00011a  e000              B        |L3.286|
                  |L3.284|
00011c  e00e              B        |L3.316|
                  |L3.286|
00011e  2c10              CMP      r4,#0x10              ;58
000120  dbbe              BLT      |L3.160|
;;;69     							}
;;;70     						}
;;;71     						break;
000122  e003              B        |L3.300|
                  |L3.292|
000124  1c76              ADDS     r6,r6,#1              ;54
                  |L3.294|
000126  f5b67ffa          CMP      r6,#0x1f4             ;54
00012a  d3a6              BCC      |L3.122|
                  |L3.300|
00012c  bf00              NOP      
;;;72     					}
;;;73     				}
;;;74     				s+=2;x+=16;
00012e  1cbf              ADDS     r7,r7,#2
000130  f1080810          ADD      r8,r8,#0x10
                  |L3.308|
000134  7838              LDRB     r0,[r7,#0]            ;34
000136  2800              CMP      r0,#0                 ;34
000138  f47faf72          BNE      |L3.32|
                  |L3.316|
;;;75     			}
;;;76     		}
;;;77     	}
;;;78     }
00013c  e8bd87f0          POP      {r4-r10,pc}
;;;79     
                          ENDP

                  |L3.320|
                          DCD      asc16
                  |L3.324|
                          DCD      hz16

                          AREA ||i.DisplayDriver_Text16_B||, CODE, READONLY, ALIGN=2

                  DisplayDriver_Text16_B PROC
;;;88     *******************************************************************************/
;;;89     void DisplayDriver_Text16_B(uint16 x, uint16 y, uint16 fc,
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;90     		uint16 bc, u8 *s)
;;;91     {
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4693              MOV      r11,r2
00000a  469a              MOV      r10,r3
00000c  f8dd9028          LDR      r9,[sp,#0x28]
;;;92     	unsigned char i,j;
;;;93     	unsigned int k;
;;;94     
;;;95     	BlockWrite(0,128,0,160);
000010  23a0              MOVS     r3,#0xa0
000012  2200              MOVS     r2,#0
000014  2180              MOVS     r1,#0x80
000016  4610              MOV      r0,r2
000018  f7fffffe          BL       BlockWrite
;;;96     
;;;97     	while(*s)
00001c  e0ab              B        |L4.374|
                  |L4.30|
;;;98     	{
;;;99     		if( *s < 0x80 )
00001e  f8990000          LDRB     r0,[r9,#0]
000022  2880              CMP      r0,#0x80
000024  da33              BGE      |L4.142|
;;;100    		{
;;;101    			k=*s;
000026  f8996000          LDRB     r6,[r9,#0]
;;;102    			if (k>32)
00002a  2e20              CMP      r6,#0x20
00002c  d901              BLS      |L4.50|
;;;103    				k-=32;
00002e  3e20              SUBS     r6,r6,#0x20
000030  e000              B        |L4.52|
                  |L4.50|
;;;104    			else
;;;105    				k=0;
000032  2600              MOVS     r6,#0
                  |L4.52|
;;;106    
;;;107    			for(i=0;i<16;i++)
000034  2400              MOVS     r4,#0
000036  e022              B        |L4.126|
                  |L4.56|
;;;108    				for(j=0;j<8;j++)
000038  2500              MOVS     r5,#0
00003a  e01c              B        |L4.118|
                  |L4.60|
;;;109    				{
;;;110    					if(asc16[k*16+i]&(0x80>>j))
00003c  eb041006          ADD      r0,r4,r6,LSL #4
000040  4950              LDR      r1,|L4.388|
000042  5c08              LDRB     r0,[r1,r0]
000044  2180              MOVS     r1,#0x80
000046  4129              ASRS     r1,r1,r5
000048  4208              TST      r0,r1
00004a  d008              BEQ      |L4.94|
;;;111    						Lcd_ColorSpot(x+j,y+i,fc);
00004c  eb080204          ADD      r2,r8,r4
000050  b291              UXTH     r1,r2
000052  197a              ADDS     r2,r7,r5
000054  b290              UXTH     r0,r2
000056  465a              MOV      r2,r11
000058  f7fffffe          BL       Lcd_ColorSpot
00005c  e009              B        |L4.114|
                  |L4.94|
;;;112    					else
;;;113    					{
;;;114    						if (fc!=bc)
00005e  45d3              CMP      r11,r10
000060  d007              BEQ      |L4.114|
;;;115    							Lcd_ColorSpot(x+j,y+i,bc);
000062  eb080204          ADD      r2,r8,r4
000066  b291              UXTH     r1,r2
000068  197a              ADDS     r2,r7,r5
00006a  b290              UXTH     r0,r2
00006c  4652              MOV      r2,r10
00006e  f7fffffe          BL       Lcd_ColorSpot
                  |L4.114|
000072  1c68              ADDS     r0,r5,#1              ;108
000074  b2c5              UXTB     r5,r0                 ;108
                  |L4.118|
000076  2d08              CMP      r5,#8                 ;108
000078  dbe0              BLT      |L4.60|
00007a  1c60              ADDS     r0,r4,#1              ;107
00007c  b2c4              UXTB     r4,r0                 ;107
                  |L4.126|
00007e  2c10              CMP      r4,#0x10              ;107
000080  dbda              BLT      |L4.56|
;;;116    					}
;;;117    				}
;;;118    			s++;x+=8;
000082  f1090901          ADD      r9,r9,#1
000086  f1070008          ADD      r0,r7,#8
00008a  b287              UXTH     r7,r0
00008c  e073              B        |L4.374|
                  |L4.142|
;;;119    		}
;;;120    		else
;;;121    		{
;;;122    			for (k=0;k<HZ16_NUM;k++)
00008e  2600              MOVS     r6,#0
000090  e068              B        |L4.356|
                  |L4.146|
;;;123    			{
;;;124    				if ((hz16[k].Index[0]==*(s))&&(hz16[k].Index[1]==*(s+1)))
000092  eb061006          ADD      r0,r6,r6,LSL #4
000096  493c              LDR      r1,|L4.392|
000098  f8110010          LDRB     r0,[r1,r0,LSL #1]
00009c  f8991000          LDRB     r1,[r9,#0]
0000a0  4288              CMP      r0,r1
0000a2  d15e              BNE      |L4.354|
0000a4  eb061006          ADD      r0,r6,r6,LSL #4
0000a8  4937              LDR      r1,|L4.392|
0000aa  eb010040          ADD      r0,r1,r0,LSL #1
0000ae  7840              LDRB     r0,[r0,#1]
0000b0  f8991001          LDRB     r1,[r9,#1]
0000b4  4288              CMP      r0,r1
0000b6  d154              BNE      |L4.354|
;;;125    				{
;;;126    					for(i=0;i<16;i++)
0000b8  2400              MOVS     r4,#0
0000ba  e04f              B        |L4.348|
                  |L4.188|
;;;127    					{
;;;128    						for(j=0;j<8;j++)
0000bc  2500              MOVS     r5,#0
0000be  e020              B        |L4.258|
                  |L4.192|
;;;129    						{
;;;130    							if(hz16[k].Msk[i*2]&(0x80>>j))
0000c0  eb061006          ADD      r0,r6,r6,LSL #4
0000c4  4930              LDR      r1,|L4.392|
0000c6  eb010040          ADD      r0,r1,r0,LSL #1
0000ca  1c80              ADDS     r0,r0,#2
0000cc  f8101014          LDRB     r1,[r0,r4,LSL #1]
0000d0  2080              MOVS     r0,#0x80
0000d2  4128              ASRS     r0,r0,r5
0000d4  4201              TST      r1,r0
0000d6  d008              BEQ      |L4.234|
;;;131    								Lcd_ColorSpot(x+j,y+i,fc);
0000d8  eb080204          ADD      r2,r8,r4
0000dc  b291              UXTH     r1,r2
0000de  197a              ADDS     r2,r7,r5
0000e0  b290              UXTH     r0,r2
0000e2  465a              MOV      r2,r11
0000e4  f7fffffe          BL       Lcd_ColorSpot
0000e8  e009              B        |L4.254|
                  |L4.234|
;;;132    							else
;;;133    							{
;;;134    								if (fc!=bc)
0000ea  45d3              CMP      r11,r10
0000ec  d007              BEQ      |L4.254|
;;;135    									Lcd_ColorSpot(x+j,y+i,bc);
0000ee  eb080204          ADD      r2,r8,r4
0000f2  b291              UXTH     r1,r2
0000f4  197a              ADDS     r2,r7,r5
0000f6  b290              UXTH     r0,r2
0000f8  4652              MOV      r2,r10
0000fa  f7fffffe          BL       Lcd_ColorSpot
                  |L4.254|
0000fe  1c68              ADDS     r0,r5,#1              ;128
000100  b2c5              UXTB     r5,r0                 ;128
                  |L4.258|
000102  2d08              CMP      r5,#8                 ;128
000104  dbdc              BLT      |L4.192|
;;;136    							}
;;;137    						}
;;;138    						for(j=0;j<8;j++)
000106  2500              MOVS     r5,#0
000108  e024              B        |L4.340|
                  |L4.266|
;;;139    						{
;;;140    							if(hz16[k].Msk[i*2+1]&(0x80>>j))
00010a  eb061006          ADD      r0,r6,r6,LSL #4
00010e  491e              LDR      r1,|L4.392|
000110  eb010040          ADD      r0,r1,r0,LSL #1
000114  1c80              ADDS     r0,r0,#2
000116  2101              MOVS     r1,#1
000118  eb010144          ADD      r1,r1,r4,LSL #1
00011c  5c40              LDRB     r0,[r0,r1]
00011e  2180              MOVS     r1,#0x80
000120  4129              ASRS     r1,r1,r5
000122  4208              TST      r0,r1
000124  d009              BEQ      |L4.314|
;;;141    								Lcd_ColorSpot(x+j+8,y+i,fc);
000126  eb080204          ADD      r2,r8,r4
00012a  b291              UXTH     r1,r2
00012c  197a              ADDS     r2,r7,r5
00012e  3208              ADDS     r2,r2,#8
000130  b290              UXTH     r0,r2
000132  465a              MOV      r2,r11
000134  f7fffffe          BL       Lcd_ColorSpot
000138  e00a              B        |L4.336|
                  |L4.314|
;;;142    							else
;;;143    							{
;;;144    								if (fc!=bc)
00013a  45d3              CMP      r11,r10
00013c  d008              BEQ      |L4.336|
;;;145    									Lcd_ColorSpot(x+j+8,y+i,bc);
00013e  eb080204          ADD      r2,r8,r4
000142  b291              UXTH     r1,r2
000144  197a              ADDS     r2,r7,r5
000146  3208              ADDS     r2,r2,#8
000148  b290              UXTH     r0,r2
00014a  4652              MOV      r2,r10
00014c  f7fffffe          BL       Lcd_ColorSpot
                  |L4.336|
000150  1c68              ADDS     r0,r5,#1              ;138
000152  b2c5              UXTB     r5,r0                 ;138
                  |L4.340|
000154  2d08              CMP      r5,#8                 ;138
000156  dbd8              BLT      |L4.266|
000158  1c60              ADDS     r0,r4,#1              ;126
00015a  b2c4              UXTB     r4,r0                 ;126
                  |L4.348|
00015c  2c10              CMP      r4,#0x10              ;126
00015e  dbad              BLT      |L4.188|
;;;146    							}
;;;147    						}
;;;148    					}
;;;149    					break;
000160  e003              B        |L4.362|
                  |L4.354|
000162  1c76              ADDS     r6,r6,#1              ;122
                  |L4.356|
000164  f5b67ffa          CMP      r6,#0x1f4             ;122
000168  d393              BCC      |L4.146|
                  |L4.362|
00016a  bf00              NOP      
;;;150    				}
;;;151    			}
;;;152    			s+=2;x+=16;
00016c  f1090902          ADD      r9,r9,#2
000170  f1070010          ADD      r0,r7,#0x10
000174  b287              UXTH     r7,r0
                  |L4.374|
000176  f8990000          LDRB     r0,[r9,#0]            ;97
00017a  2800              CMP      r0,#0                 ;97
00017c  f47faf4f          BNE      |L4.30|
;;;153    		}
;;;154    	}
;;;155    }
000180  e8bd9ff0          POP      {r4-r12,pc}
;;;156    
                          ENDP

                  |L4.388|
                          DCD      asc16
                  |L4.392|
                          DCD      hz16

                          AREA ||i.LCD_Display_Clear||, CODE, READONLY, ALIGN=1

                  LCD_Display_Clear PROC
;;;181    *******************************************************************************/
;;;182    void LCD_Display_Clear()
000000  b510              PUSH     {r4,lr}
;;;183    {
;;;184    	BlockWrite(0,127,0,159);
000002  239f              MOVS     r3,#0x9f
000004  2200              MOVS     r2,#0
000006  217f              MOVS     r1,#0x7f
000008  4610              MOV      r0,r2
00000a  f7fffffe          BL       BlockWrite
;;;185    	Lcd_Display_Clear();
00000e  f7fffffe          BL       Lcd_Display_Clear
;;;186    }
000012  bd10              POP      {r4,pc}
;;;187    
                          ENDP

